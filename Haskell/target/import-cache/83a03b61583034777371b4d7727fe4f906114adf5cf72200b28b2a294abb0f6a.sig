Module("completion/Haskell-Qualifiers-cp",[Imports([Import("libstratego-gpp"),ImportWildcard("libspoofax/editor/completion")]),Imports([Import("signatures/Haskell-Qualifiers-sig")]),Imports([Import("completion/Haskell-Patterns-cp"),Import("completion/Haskell-Expressions-cp"),Import("completion/Haskell-Value-Definitions-cp")]),Rules([SDefT("suggest-completions",[],[VarDec("completions",ConstType(SortNoArgs("ATerm")))],SRule(Rule(NoAnnoList(Op("Quals-Plhdr",[])),App(Seq(CallT(SVar("add-completions"),[],[NoAnnoList(Tuple([NoAnnoList(Str("\"QualsList\"")),NoAnnoList(Op("QualsList",[NoAnnoList(List([App(CallT(SVar("try"),[CallT(SVar("inline-completions"),[],[NoAnnoList(Op("Quals-Plhdr",[]))])],[]),NoAnnoList(Op("Qual-Plhdr",[])))]))]))]))]),Fail),Var("completions")),[]))),SDefT("suggest-completions",[],[VarDec("completions",ConstType(SortNoArgs("ATerm")))],SRule(Rule(NoAnnoList(Op("Qual-Plhdr",[])),App(Seq(CallT(SVar("add-completions"),[],[NoAnnoList(Tuple([NoAnnoList(Str("\"QualBind\"")),NoAnnoList(Op("QualBind",[App(CallT(SVar("try"),[CallT(SVar("inline-completions"),[],[NoAnnoList(Op("Qual-Plhdr",[]))])],[]),NoAnnoList(Op("Pat-Plhdr",[]))),App(CallT(SVar("try"),[CallT(SVar("inline-completions"),[],[NoAnnoList(Op("Qual-Plhdr",[]))])],[]),NoAnnoList(Op("Exp-Plhdr",[])))]))]))]),Fail),Var("completions")),[]))),SDefT("suggest-completions",[],[VarDec("completions",ConstType(SortNoArgs("ATerm")))],SRule(Rule(NoAnnoList(Op("Qual-Plhdr",[])),App(CallT(SVar("suggest-completions"),[],[Var("completions")]),NoAnnoList(Op("Exp-Plhdr",[]))),[WhereClause(Seq(BA(Not(CallT(SVar("is-expanded"),[],[])),NoAnnoList(Tuple([NoAnnoList(Op("Qual-Plhdr",[])),NoAnnoList(Op("Exp-Plhdr",[]))]))),GenDynRules([SetDynRule(DynRuleId(RDecT("is-expanded",[],[])),Rule(NoAnnoList(Tuple([NoAnnoList(Op("Qual-Plhdr",[])),NoAnnoList(Op("Exp-Plhdr",[]))])),RootApp(Id),[]))])))]))),SDefT("suggest-completions",[],[VarDec("completions",ConstType(SortNoArgs("ATerm")))],SRule(Rule(NoAnnoList(Op("Qual-Plhdr",[])),App(Seq(CallT(SVar("add-completions"),[],[NoAnnoList(Tuple([NoAnnoList(Str("\"QualLet\"")),NoAnnoList(Op("QualLet",[App(CallT(SVar("try"),[CallT(SVar("inline-completions"),[],[NoAnnoList(Op("Qual-Plhdr",[]))])],[]),NoAnnoList(Op("Declbinds-Plhdr",[])))]))]))]),Fail),Var("completions")),[])))]),Rules([SDefT("is-left-recursive",[],[],SRule(Rule(NoAnnoList(Str("\"Exp\"")),App(CallT(SVar("is-left-recursive"),[],[]),NoAnnoList(Str("\"Qual\""))),[WhereClause(BA(Not(CallT(SVar("is-lexical-completion-sort"),[],[])),NoAnnoList(Str("\"Exp\""))))]))),SDefT("is-right-recursive",[],[],SRule(Rule(NoAnnoList(Str("\"Exp\"")),App(CallT(SVar("is-right-recursive"),[],[]),NoAnnoList(Str("\"Qual\""))),[WhereClause(BA(Not(CallT(SVar("is-lexical-completion-sort"),[],[])),NoAnnoList(Str("\"Exp\""))))]))),SDefT("is-Qual-completion-sort",[],[],SRule(Rule(NoAnnoList(Str("\"Exp\"")),RootApp(Id),[])))]),Rules([SDefT("is-SDF-placeholder",[],[],Match(NoAnnoList(Op("Quals-Plhdr",[])))),SDefT("is-SDF-placeholder",[],[],Match(NoAnnoList(Op("Pat-Plhdr",[])))),SDefT("is-SDF-placeholder",[],[],Match(NoAnnoList(Op("Exp-Plhdr",[])))),SDefT("is-SDF-placeholder",[],[],Match(NoAnnoList(Op("Qual-Plhdr",[])))),SDefT("is-SDF-placeholder",[],[],Match(NoAnnoList(Op("Declbinds-Plhdr",[]))))])])