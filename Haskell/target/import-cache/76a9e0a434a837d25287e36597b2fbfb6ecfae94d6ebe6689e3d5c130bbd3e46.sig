Module("completion",[Imports([ImportWildcard("libspoofax/editor/completion"),Import("completion/Haskell-cp"),ImportWildcard("pp"),Import("pp")]),Rules([SDefT("get-proposals-empty-program-Haskell",[],[],Seq(Match(NoAnnoList(Tuple([Var("sort"),Wld]))),CallT(SVar("get-proposals-empty-program"),[CallT(SVar("pp-partial-Haskell-string"),[],[Var("sort")]),CallT(SVar("parenthesize-Haskell"),[],[]),CallT(SVar("Haskell-get-indent"),[],[]),CallT(SVar("Haskell-get-leading-ws"),[],[]),CallT(SVar("Haskell-get-separator"),[],[])],[]))),SDefT("get-proposals-left-recursive-Haskell",[],[],Seq(Match(NoAnnoList(Tuple([Var("sort"),Wld]))),CallT(SVar("get-proposals-left-recursive"),[CallT(SVar("pp-partial-Haskell-string"),[],[]),CallT(SVar("parenthesize-Haskell"),[],[]),CallT(SVar("Haskell-get-indent"),[],[]),CallT(SVar("Haskell-get-leading-ws"),[],[]),CallT(SVar("Haskell-get-separator"),[],[])],[]))),SDefT("get-proposals-right-recursive-Haskell",[],[],Seq(Match(NoAnnoList(Tuple([Var("sort"),Wld]))),CallT(SVar("get-proposals-right-recursive"),[CallT(SVar("pp-partial-Haskell-string"),[],[]),CallT(SVar("parenthesize-Haskell"),[],[]),CallT(SVar("Haskell-get-indent"),[],[]),CallT(SVar("Haskell-get-leading-ws"),[],[]),CallT(SVar("Haskell-get-separator"),[],[])],[]))),SDefT("get-proposals-placeholder-Haskell",[],[],Seq(Match(NoAnnoList(Tuple([Var("sort"),Wld,Wld,Wld]))),CallT(SVar("get-proposals-placeholder"),[CallT(SVar("pp-partial-Haskell-string"),[],[Var("sort")]),CallT(SVar("parenthesize-Haskell"),[],[]),CallT(SVar("Haskell-get-indent"),[],[]),CallT(SVar("Haskell-get-leading-ws"),[],[]),CallT(SVar("Haskell-get-separator"),[],[])],[]))),SDefT("get-proposals-optional-Haskell",[],[],Seq(Match(NoAnnoList(Tuple([Var("sort"),Wld,Wld]))),CallT(SVar("get-proposals-optional"),[CallT(SVar("pp-partial-Haskell-string"),[],[Var("sort")]),CallT(SVar("parenthesize-Haskell"),[],[]),CallT(SVar("Haskell-get-indent"),[],[]),CallT(SVar("Haskell-get-leading-ws"),[],[]),CallT(SVar("Haskell-get-separator"),[],[])],[]))),SDefT("get-proposals-list-Haskell",[],[],Seq(Match(NoAnnoList(Tuple([Var("sort"),Wld,Wld,Wld]))),CallT(SVar("get-proposals-list"),[CallT(SVar("pp-partial-Haskell-string"),[],[Var("sort")]),CallT(SVar("parenthesize-Haskell"),[],[]),CallT(SVar("Haskell-get-indent"),[],[]),CallT(SVar("Haskell-get-leading-ws"),[],[]),CallT(SVar("Haskell-get-separator"),[],[])],[]))),SDefT("get-proposals-incorrect-programs-Haskell",[],[],Seq(Match(NoAnnoList(Tuple([Var("sort"),Wld,Wld,Wld,Wld]))),CallT(SVar("get-proposals-incorrect-programs"),[CallT(SVar("pp-partial-Haskell-string"),[],[Var("sort")]),CallT(SVar("parenthesize-Haskell"),[],[]),CallT(SVar("Haskell-get-indent"),[],[]),CallT(SVar("Haskell-get-leading-ws"),[],[]),CallT(SVar("Haskell-get-separator"),[],[])],[]))),SDefT("get-proposals-incorrect-programs-nested-Haskell",[],[],Seq(Match(NoAnnoList(Tuple([Var("sort"),Wld,Wld,Wld,Wld,Wld]))),CallT(SVar("get-proposals-incorrect-programs-nested"),[CallT(SVar("pp-partial-Haskell-string"),[],[Var("sort")]),CallT(SVar("parenthesize-Haskell"),[],[]),CallT(SVar("Haskell-get-indent"),[],[]),CallT(SVar("Haskell-get-leading-ws"),[],[]),CallT(SVar("Haskell-get-separator"),[],[])],[]))),SDefT("get-proposals-incorrect-programs-single-placeholder-Haskell",[],[],Seq(Match(NoAnnoList(Tuple([Var("sort"),Wld,Wld,Wld,Wld,Wld,Wld]))),CallT(SVar("get-proposals-incorrect-programs-single-placeholder"),[CallT(SVar("pp-partial-Haskell-string"),[],[Var("sort")]),CallT(SVar("parenthesize-Haskell"),[],[]),CallT(SVar("Haskell-get-indent"),[],[]),CallT(SVar("Haskell-get-leading-ws"),[],[]),CallT(SVar("Haskell-get-separator"),[],[])],[])))])])