Module("libspoofax/editor/refactoring/construct-text",[Imports([Import("libstratego-gpp"),Import("libspoofax/term/origin"),Import("libspoofax/editor/refactoring/layout-adaption")]),Signature([Constructors([OpDecl("Parenthetical",FunType([ConstType(SortNoArgs("Unknown"))],ConstType(SortNoArgs("Unknown"))))])]),Rules([SDefT("DEFAULT-INDENT",[],[],Build(NoAnnoList(Str("\"\\t\""))))]),Rules([SDefT("origin-indent",[],[],Match(NoAnnoList(Op("Parenthetical",[RootApp(CallT(SVar("origin-indent"),[],[]))]))))]),Rules([SDefT("construct-text-from-source",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("parenthesize",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(As(Var("t"),NoAnnoList(Tuple([Var("oldnode"),Var("newnode")]))),Var("newText"),[WhereClause(Seq(BA(CallT(SVar("is-tuple"),[],[]),Var("t")),BA(CallT(SVar("has-origin-term"),[],[]),Var("oldnode")))),WithClause(Seq(Assign(Var("parenthesized-node"),App(CallT(SVar("try"),[CallT(SVar("parenthesize"),[],[])],[]),Var("newnode"))),Seq(Assign(Var("reconstructed-text"),App(Seq(CallT(SVar("topdown"),[CallT(SVar("try"),[CallT(SVar("strip-annos"),[],[])],[])],[]),CallT(SVar("construct-text-from-old"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[])),NoAnnoList(Tuple([Var("oldnode"),Var("parenthesized-node")])))),Assign(Var("newText"),App(CallT(SVar("origin-set-relation"),[],[]),NoAnnoList(Tuple([Var("parenthesized-node"),Var("reconstructed-text")])))))))]))),SDefT("construct-textual-change",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("parenthesize",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(NoAnnoList(Tuple([Var("oldnode"),Var("newnode")])),NoAnnoList(Tuple([Var("start-offset"),Var("end-offset"),Var("newText")])),[WhereClause(Seq(Assign(Var("r-text"),App(CallT(SVar("construct-text-from-source"),[CallT(SVar("pp"),[],[]),CallT(SVar("parenthesize"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([Var("oldnode"),Var("newnode")])))),Assign(NoAnnoList(Tuple([Var("start-offset"),Var("end-offset"),Var("newText")])),App(CallT(SVar("ast-change-to-text-change"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Op("REPLACEMENT",[Var("oldnode"),Var("r-text")]))))))])))]),Rules([SDefT("construct-textual-change",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("parenthesize",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(As(Var("t"),NoAnnoList(Tuple([Var("oldnode"),Var("newnode")]))),NoAnnoList(Tuple([NoAnnoList(Int("0")),NoAnnoList(Int("0")),NoAnnoList(Str("\"\""))])),[WhereClause(Seq(BA(CallT(SVar("is-tuple"),[],[]),Var("t")),BA(CallT(SVar("equal"),[],[]),NoAnnoList(Tuple([Var("oldnode"),Var("newnode")])))))]))),SDefT("construct-textual-change",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("parenthesize",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],CallT(SVar("map"),[CallT(SVar("construct-textual-change"),[CallT(SVar("pp"),[],[]),CallT(SVar("parenthesize"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[])],[])),SDefT("construct-text-from-old",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(NoAnnoList(Tuple([Var("oldnode"),Var("newnode")])),Var("reconstructed-text"),[WhereClause(GuardedLChoice(Assign(Var("reconstructed-text"),App(CallT(SVar("construct-text-from-origin"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([Var("oldnode"),Var("newnode")])))),Id,GuardedLChoice(Assign(Var("reconstructed-text"),App(CallT(SVar("construct-text-from-origin"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([App(Seq(Where(Not(CallT(SVar("is-origin-term"),[],[]))),CallT(SVar("origin-term"),[],[])),Var("oldnode")),Var("newnode")])))),Id,Assign(Var("reconstructed-text"),App(CallT(SVar("construct-text"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),Var("newnode"))))))])))]),Rules([SDefT("construct-textual-change",[VarDec("pp",ConstType(SortNoArgs("ATerm")))],[],CallT(SVar("construct-textual-change"),[CallT(SVar("pp"),[],[]),Id,Fail,Fail],[])),SDefT("construct-textual-change",[VarDec("pp",ConstType(SortNoArgs("ATerm")))],[VarDec("pp-table",ConstType(SortNoArgs("ATerm")))],CallT(SVar("construct-textual-change"),[GuardedLChoice(CallT(SVar("pp"),[],[]),Id,Seq(CallT(SVar("ast2abox"),[],[NoAnnoList(List([Var("pp-table")]))]),CallT(SVar("box2text-string"),[],[NoAnnoList(Int("100"))])))],[]))]),Rules([SDefT("construct-text",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],GuardedLChoice(CallT(SVar("construct-text-from-origin-desugared"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),Id,GuardedLChoice(CallT(SVar("construct-text-from-origin"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),Id,GuardedLChoice(CallT(SVar("construct-text-by-pp"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),Id,CallT(SVar("pp"),[],[]))))),SDefT("construct-text-from-origin-desugared",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(Var("node"),App(CallT(SVar("construct-text-from-origin"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([Var("origin-desugared-node"),Var("node")]))),[WhereClause(Assign(Var("origin-desugared-node"),App(Seq(CallT(SVar("origin-term-desugared"),[],[]),CallT(SVar("topdown"),[CallT(SVar("try"),[CallT(SVar("strip-annos"),[],[])],[])],[])),Var("node"))))]))),SDefT("construct-text-from-origin",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(Var("node"),App(CallT(SVar("construct-text-from-origin"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([Var("origin-node"),Var("node")]))),[WhereClause(Assign(Var("origin-node"),App(CallT(SVar("origin-term"),[],[]),Var("node"))))]))),SDefT("construct-text-from-origin",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(Var("lst"),App(CallT(SVar("construct-text-with-comments"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[NoAnnoList(Str("\"\""))]),NoAnnoList(Tuple([Var("origin-lst"),Var("lst")]))),[WhereClause(Assign(Var("origin-lst"),App(CallT(SVar("find-origin-sublist"),[],[]),Var("lst"))))]))),SDefT("construct-text-from-origin",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(As(Var("t"),NoAnnoList(Tuple([Var("origin-node"),Var("node")]))),App(CallT(SVar("correct-indentation"),[],[Var("origin-node")]),Var("text")),[WhereClause(Seq(BA(CallT(SVar("is-tuple"),[],[]),Var("t")),Seq(BA(CallT(SVar("has-origin-term"),[],[]),Var("origin-node")),Seq(Assign(Var("ast-changes"),App(CallT(SVar("collect-ast-changes"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([Var("origin-node"),Var("node")])))),BA(CallT(SVar("is-terminating-diff"),[],[Var("node")]),Var("ast-changes")))))),WithClause(Seq(Assign(Var("text-changes"),App(CallT(SVar("map"),[CallT(SVar("ast-change-to-text-change"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[])],[]),Var("ast-changes"))),Assign(Var("text"),App(CallT(SVar("apply-text-changes"),[],[]),NoAnnoList(Tuple([Var("text-changes"),App(CallT(SVar("origin-text"),[],[]),Var("origin-node")),App(CallT(SVar("origin-start-offset"),[],[]),Var("origin-node"))]))))))]))),SDefT("construct-text-by-pp",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(Var("node"),Var("text"),[WhereClause(Assign(Var("text"),App(Seq(Match(NoAnnoList(Op("Parenthetical",[RootApp(Id)]))),Seq(All(CallT(SVar("alltd"),[GuardedLChoice(CallT(SVar("is-string"),[],[]),Id,GuardedLChoice(CallT(SVar("is-completion-placeholder"),[],[]),Id,CallT(SVar("try"),[CallT(SVar("construct-text-with-comments"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[RootApp(CallT(SVar("DEFAULT-INDENT"),[],[]))])],[])))],[])),Seq(Build(NoAnnoList(Op("Parenthetical",[RootApp(Id)]))),CallT(SVar("pp"),[],[])))),Var("node"))))]))),SDefT("construct-text-by-pp",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(Var("node"),Var("text"),[WhereClause(Not(Match(NoAnnoList(Op("Parenthetical",[Wld]))))),WhereClause(Assign(Var("text"),App(Seq(All(CallT(SVar("alltd"),[GuardedLChoice(CallT(SVar("is-string"),[],[]),Id,GuardedLChoice(CallT(SVar("is-completion-placeholder"),[],[]),Id,CallT(SVar("try"),[CallT(SVar("construct-text-with-comments"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[RootApp(CallT(SVar("DEFAULT-INDENT"),[],[]))])],[])))],[])),CallT(SVar("pp"),[],[])),Var("node"))))]))),SDefT("is-completion-placeholder",[],[],Seq(Where(Seq(CallT(SVar("get-constructor"),[],[]),CallT(SVar("is-substring"),[Build(NoAnnoList(Str("\"-Plhdr\"")))],[]))),Id)),SDefT("construct-text-with-comments",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[VarDec("default-indent",ConstType(SortNoArgs("ATerm")))],GuardedLChoice(CallT(SVar("construct-text-with-comments-desugared"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[Var("default-indent")]),Id,CallT(SVar("construct-text-with-comments-origin"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[Var("default-indent")]))),SDefT("construct-text-with-comments-desugared",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[VarDec("default-indent",ConstType(SortNoArgs("ATerm")))],SRule(Rule(Var("node"),App(CallT(SVar("construct-text-with-comments"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[Var("default-indent")]),NoAnnoList(Tuple([Var("origin-desugared-node"),Var("node")]))),[WhereClause(Seq(Assign(Var("origin-desugared-node"),App(Seq(CallT(SVar("origin-term-desugared"),[],[]),CallT(SVar("topdown"),[CallT(SVar("try"),[CallT(SVar("strip-annos"),[],[])],[])],[])),Var("node"))),BA(CallT(SVar("same-signature"),[],[]),NoAnnoList(Tuple([Var("origin-desugared-node"),Var("node")])))))]))),SDefT("construct-text-with-comments-origin",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[VarDec("default-indent",ConstType(SortNoArgs("ATerm")))],SRule(Rule(Var("node"),App(CallT(SVar("construct-text-with-comments"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[Var("default-indent")]),NoAnnoList(Tuple([Var("origin-node"),Var("node")]))),[WhereClause(Assign(Var("origin-node"),App(GuardedLChoice(CallT(SVar("origin-term"),[],[]),Id,CallT(SVar("find-origin-sublist"),[],[])),Var("node"))))]))),SDefT("construct-text-with-comments",[VarDec("pp",ConstType(SortNoArgs("ATerm"))),VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[VarDec("default-indent",ConstType(SortNoArgs("ATerm")))],SRule(Rule(As(Var("t"),NoAnnoList(Tuple([Var("origin-node"),Var("node")]))),Var("node-text"),[WhereClause(Seq(BA(CallT(SVar("is-tuple"),[],[]),Var("t")),BA(CallT(SVar("has-origin-term"),[],[]),Var("origin-node")))),WithClause(Seq(Assign(Var("ast-changes"),App(CallT(SVar("collect-ast-changes"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([Var("origin-node"),Var("node")])))),Seq(Assign(Var("text-changes"),App(CallT(SVar("map"),[CallT(SVar("ast-change-to-text-change"),[CallT(SVar("pp"),[],[]),CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[])],[]),Var("ast-changes"))),Seq(Assign(Var("full-text"),App(CallT(SVar("origin-text-with-layout"),[],[]),Var("origin-node"))),Seq(Assign(Var("full-text-start-offset"),App(CallT(SVar("origin-layout-prefix-start-offset"),[],[]),Var("origin-node"))),Seq(Assign(Var("modified-full-text"),App(CallT(SVar("apply-text-changes"),[],[]),NoAnnoList(Tuple([Var("text-changes"),Var("full-text"),Var("full-text-start-offset")])))),Assign(Var("node-text"),App(CallT(SVar("replace-indentation"),[],[Var("default-indent"),App(GuardedLChoice(CallT(SVar("origin-indent"),[],[]),Id,Build(NoAnnoList(Str("\"\"")))),Var("origin-node"))]),Var("modified-full-text")))))))))])))]),Signature([Constructors([OpDecl("DELETION",FunType([ConstType(SortNoArgs("OldList"))],ConstType(SortNoArgs("AST_CHANGE")))),OpDecl("REPLACEMENT",FunType([ConstType(SortNoArgs("OldNode")),ConstType(SortNoArgs("NewNode"))],ConstType(SortNoArgs("AST_CHANGE")))),OpDecl("INSERT_BEFORE",FunType([ConstType(SortNoArgs("OldNode")),ConstType(SortNoArgs("NewList"))],ConstType(SortNoArgs("AST_CHANGE")))),OpDecl("INSERT_AT_END",FunType([ConstType(SortNoArgs("OldNode")),ConstType(SortNoArgs("NewList"))],ConstType(SortNoArgs("AST_CHANGE"))))])]),Rules([SDefT("collect-ast-changes",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],Seq(Where(CallT(SVar("is-tuple"),[],[])),Seq(CallT(SVar("try"),[CallT(SVar("remove-superfluous-parentethical"),[],[])],[]),GuardedLChoice(CallT(SVar("collect-ast-changes-eq"),[],[]),Id,GuardedLChoice(CallT(SVar("collect-ast-changes-not-homomorphic"),[CallT(SVar("override-reconstruction"),[],[])],[]),Id,GuardedLChoice(CallT(SVar("collect-ast-changes-resugared"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),Id,GuardedLChoice(CallT(SVar("collect-ast-changes-rec-node"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),Id,GuardedLChoice(CallT(SVar("collect-ast-changes-rec-list"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),Id,GuardedLChoice(CallT(SVar("collect-ast-changes-sugared"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),Id,CallT(SVar("collect-ast-changes-replace"),[],[])))))))))),SDefT("collect-ast-changes-resugared",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(NoAnnoList(Tuple([Var("origin-node"),Var("node")])),Var("ast-changes"),[WhereClause(Seq(BA(Not(CallT(SVar("is-origin-term"),[],[])),Var("origin-node")),Seq(Assign(Var("origin-resugared"),App(CallT(SVar("origin-track-forced"),[CallT(SVar("resugar"),[],[])],[]),Var("origin-node"))),Seq(BA(Not(CallT(SVar("equal"),[],[])),NoAnnoList(Tuple([Var("origin-node"),Var("origin-resugared")]))),Assign(Var("ast-changes"),App(CallT(SVar("collect-ast-changes"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([Var("origin-resugared"),App(CallT(SVar("try"),[CallT(SVar("resugar"),[],[])],[]),Var("node"))]))))))))]))),SDefT("collect-ast-changes-not-homomorphic",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(NoAnnoList(Tuple([Var("origin-node"),Var("node")])),NoAnnoList(List([NoAnnoList(Op("REPLACEMENT",[Var("origin-node"),App(CallT(SVar("origin-set-relation"),[],[]),NoAnnoList(Tuple([Var("node"),Var("custom-node")])))]))])),[WhereClause(Seq(Assign(Var("custom-node"),App(CallT(SVar("override-reconstruction"),[],[]),NoAnnoList(Tuple([Var("origin-node"),Var("node")])))),BA(CallT(SVar("check-change-origin"),[],[]),NoAnnoList(Op("REPLACEMENT",[Var("origin-node"),Var("node")])))))]))),SDefT("remove-superfluous-parentethical",[],[],SRule(Rule(NoAnnoList(Tuple([Var("origin-node"),NoAnnoList(Op("Parenthetical",[Var("node")]))])),NoAnnoList(Tuple([Var("origin-node"),Var("node")])),[WhereClause(BA(CallT(SVar("same-signature"),[],[]),NoAnnoList(Tuple([Var("origin-node"),Var("node")]))))]))),SDefT("collect-ast-changes-eq",[],[],SRule(Rule(NoAnnoList(Tuple([Var("origin-node"),Var("node")])),NoAnnoList(List([])),[WhereClause(BA(CallT(SVar("equal"),[],[]),NoAnnoList(Tuple([Var("origin-node"),Var("node")]))))]))),SDefT("collect-ast-changes-rec-node",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(NoAnnoList(Tuple([Var("origin-node"),Var("node")])),Var("ast-changes"),[WhereClause(Seq(BA(GuardedLChoice(CallT(SVar("same-signature"),[],[]),Id,Match(NoAnnoList(Tuple([NoAnnoList(List([Wld])),NoAnnoList(List([Wld]))])))),NoAnnoList(Tuple([Var("origin-node"),Var("node")]))),Seq(BA(GuardedLChoice(CallT(SVar("is-related-to"),[],[Var("origin-node")]),Id,CallT(SVar("is-related-to-fuzzy"),[],[Var("origin-node")])),Var("node")),Seq(Assign(Var("arg-tuples"),App(CallT(SVar("zip"),[],[]),NoAnnoList(Tuple([App(CallT(SVar("get-arguments"),[],[]),Var("origin-node")),App(CallT(SVar("get-arguments"),[],[]),Var("node"))])))),Assign(Var("ast-changes"),App(Seq(CallT(SVar("map"),[CallT(SVar("collect-ast-changes"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[])],[]),CallT(SVar("flatten-list"),[],[])),Var("arg-tuples")))))))]))),SDefT("collect-ast-changes-rec-list",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(NoAnnoList(Tuple([Var("origin-lst"),Var("lst")])),Var("ast-changes"),[WhereClause(BA(Not(CallT(SVar("violates-homomorphism-list"),[],[])),NoAnnoList(Tuple([Var("origin-lst"),Var("lst")])))),WhereClause(Seq(Assign(Var("ast-changes"),App(Seq(CallT(SVar("list-diff"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[Var("origin-lst")]),Seq(CallT(SVar("filter"),[Not(Match(NoAnnoList(Op("INSERT_BEFORE",[Wld,NoAnnoList(List([]))]))))],[]),CallT(SVar("filter"),[Not(Match(NoAnnoList(Op("INSERT_AT_END",[Wld,NoAnnoList(List([]))]))))],[]))),NoAnnoList(Tuple([Var("origin-lst"),Var("lst")])))),BA(CallT(SVar("map"),[CallT(SVar("check-change-origin"),[],[])],[]),Var("ast-changes"))))]))),SDefT("check-change-origin",[],[],SRule(Rule(As(Var("r"),NoAnnoList(Op("REPLACEMENT",[Var("or"),Wld]))),Var("r"),[WhereClause(BA(CallT(SVar("has-origin-term"),[],[]),Var("or")))]))),SDefT("check-change-origin",[],[],SRule(Rule(As(Var("d"),NoAnnoList(Op("DELETION",[Var("or")]))),Var("d"),[WhereClause(BA(CallT(SVar("has-origin-term"),[],[]),Var("or")))]))),SDefT("check-change-origin",[],[],SRule(Rule(As(Var("ins"),NoAnnoList(Op("INSERT_AT_END",[Var("or"),Var("trm")]))),Var("ins"),[WhereClause(GuardedLChoice(BA(CallT(SVar("has-origin-term"),[],[]),Var("or")),Id,BA(Match(NoAnnoList(List([]))),Var("trm"))))]))),SDefT("check-change-origin",[],[],SRule(Rule(As(Var("ins"),NoAnnoList(Op("INSERT_BEFORE",[Var("or"),Var("trm")]))),Var("ins"),[WhereClause(GuardedLChoice(BA(CallT(SVar("has-origin-term"),[],[]),Var("or")),Id,BA(Match(NoAnnoList(List([]))),Var("trm"))))]))),SDefT("collect-ast-changes-sugared",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[],SRule(Rule(NoAnnoList(Tuple([Var("origin-node"),Var("node")])),Var("ast-changes"),[WhereClause(Seq(BA(CallT(SVar("is-origin-term-desugared"),[],[]),Var("node")),BA(Not(CallT(SVar("is-origin-term"),[],[])),Var("node")))),WhereClause(Assign(Var("ast-changes"),App(CallT(SVar("collect-ast-changes-rec-node"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([App(CallT(SVar("origin-term"),[],[]),Var("origin-node")),App(CallT(SVar("origin-term"),[],[]),Var("node"))])))))]))),SDefT("collect-ast-changes-replace",[],[],SRule(Rule(NoAnnoList(Tuple([Var("origin-node"),Var("node")])),NoAnnoList(List([NoAnnoList(Op("REPLACEMENT",[Var("origin-node"),Var("node")]))])),[WhereClause(Seq(BA(CallT(SVar("check-change-origin"),[],[]),NoAnnoList(Op("REPLACEMENT",[Var("origin-node"),Var("node")]))),BA(GuardedLChoice(Where(CallT(SVar("is-list"),[],[])),GuardedLChoice(Match(NoAnnoList(List([]))),Id,GuardedLChoice(Match(NoAnnoList(List([Wld]))),Id,CallT(SVar("has-origin-sublist"),[],[]))),Id),Var("node"))))])))]),Rules([]),Rules([SDefT("list-diff",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[VarDec("origin-lst",ConstType(SortNoArgs("ATerm")))],GuardedLChoice(CallT(SVar("list-diff-fuzzy"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[Var("origin-lst")]),Id,CallT(SVar("list-diff-origin-related"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[Var("origin-lst")]))),SDefT("list-diff-fuzzy",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[VarDec("origin-lst",ConstType(SortNoArgs("ATerm")))],SRule(Rule(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("origin-elem")],Var("origin-rest"))),NoAnnoList(ListTail([Var("new-elem")],Var("new-rest")))])),Var("ast-changes"),[WhereClause(Seq(BA(CallT(SVar("is-deletion"),[],[Var("new-rest")]),Var("origin-elem")),Seq(BA(CallT(SVar("is-insertion"),[],[Var("origin-rest")]),Var("new-elem")),Assign(Var("ast-changes"),App(CallT(SVar("flatten-list"),[],[]),NoAnnoList(ListTail([App(CallT(SVar("collect-ast-changes"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([Var("origin-elem"),Var("new-elem")])))],App(CallT(SVar("list-diff"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[Var("origin-lst")]),NoAnnoList(Tuple([Var("origin-rest"),Var("new-rest")]))))))))))]))),SDefT("list-diff-origin-related",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[VarDec("origin-lst",ConstType(SortNoArgs("ATerm")))],SRule(Rule(NoAnnoList(Tuple([Var("origin-elems"),Var("new-elems")])),Var("ast-changes"),[WhereClause(Seq(Assign(Var("deleted-elems"),App(CallT(SVar("take-while"),[CallT(SVar("is-deletion"),[],[Var("new-elems")])],[]),Var("origin-elems"))),Seq(Assign(Var("origin-rest"),App(CallT(SVar("drop-while"),[CallT(SVar("is-deletion"),[],[Var("new-elems")])],[]),Var("origin-elems"))),Seq(BA(Not(Match(NoAnnoList(List([])))),Var("deleted-elems")),Seq(BA(CallT(SVar("check-change-origin"),[],[]),NoAnnoList(Op("DELETION",[Var("deleted-elems")]))),Assign(Var("ast-changes"),App(CallT(SVar("flatten-list"),[],[]),NoAnnoList(ListTail([NoAnnoList(Op("DELETION",[Var("deleted-elems")]))],App(CallT(SVar("list-diff"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[Var("origin-lst")]),NoAnnoList(Tuple([Var("origin-rest"),Var("new-elems")]))))))))))))]))),SDefT("list-diff-origin-related",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[VarDec("origin-lst",ConstType(SortNoArgs("ATerm")))],SRule(Rule(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("origin-elem")],Var("origin-rest"))),Var("new-elems")])),Var("ast-changes"),[WhereClause(Seq(Assign(NoAnnoList(Tuple([Var("inserted"),Var("elem"),Var("rest")])),App(CallT(SVar("split-fetch-keep"),[CallT(SVar("is-related-to"),[],[Var("origin-elem")])],[]),Var("new-elems"))),Seq(BA(CallT(SVar("check-change-origin"),[],[]),NoAnnoList(Op("INSERT_BEFORE",[Var("origin-elem"),Var("inserted")]))),Assign(Var("ast-changes"),App(CallT(SVar("flatten-list"),[],[]),NoAnnoList(ListTail([NoAnnoList(Op("INSERT_BEFORE",[Var("origin-elem"),Var("inserted")])),App(CallT(SVar("collect-ast-changes"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[]),NoAnnoList(Tuple([Var("origin-elem"),Var("elem")])))],App(CallT(SVar("list-diff"),[CallT(SVar("override-reconstruction"),[],[]),CallT(SVar("resugar"),[],[])],[Var("origin-lst")]),NoAnnoList(Tuple([Var("origin-rest"),Var("rest")]))))))))))]))),SDefT("list-diff-origin-related",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[VarDec("origin-lst",ConstType(SortNoArgs("ATerm")))],SRule(Rule(NoAnnoList(Tuple([NoAnnoList(List([])),Var("new-elems")])),NoAnnoList(List([NoAnnoList(Op("INSERT_AT_END",[Var("origin-lst"),Var("new-elems")]))])),[WhereClause(BA(CallT(SVar("check-change-origin"),[],[]),NoAnnoList(Op("INSERT_AT_END",[Var("origin-lst"),Var("new-elems")]))))]))),SDefT("list-diff-origin-related",[VarDec("override-reconstruction",ConstType(SortNoArgs("ATerm"))),VarDec("resugar",ConstType(SortNoArgs("ATerm")))],[VarDec("origin-lst",ConstType(SortNoArgs("ATerm")))],SRule(Rule(NoAnnoList(Tuple([NoAnnoList(List([])),Var("new-elems")])),NoAnnoList(List([NoAnnoList(Op("INSERT_AT_END",[App(CallT(SVar("last"),[],[]),Var("origin-lst")),Var("new-elems")]))])),[WhereClause(BA(CallT(SVar("check-change-origin"),[],[]),NoAnnoList(Op("INSERT_AT_END",[App(CallT(SVar("last"),[],[]),Var("origin-lst")),Var("new-elems")]))))])))]),Rules([SDefT("find-origin-sublist",[],[],SRule(Rule(Var("lst"),Var("sublst"),[WhereClause(GuardedLChoice(CallT(SVar("at-suffix"),[Assign(Var("sublst"),RootApp(Seq(CallT(SVar("origin-sublist-term"),[],[]),Match(NoAnnoList(ListTail([Wld,Wld],Wld))))))],[]),Id,Assign(Var("sublst"),App(Seq(CallT(SVar("init"),[],[]),CallT(SVar("find-origin-sublist"),[],[])),Var("lst")))))]))),SDefT("has-origin-sublist",[],[],Where(CallT(SVar("find-origin-sublist"),[],[]))),SDefT("is-terminating-diff",[],[VarDec("newnode",ConstType(SortNoArgs("ATerm")))],SRule(Rule(Var("ast-changes"),Var("ast-changes"),[WhereClause(BA(Not(CallT(SVar("fetch"),[Match(NoAnnoList(Op("REPLACEMENT",[Wld,Var("newnode")])))],[])),Var("ast-changes")))])))]),Rules([SDefT("same-signature",[],[],SRule(Rule(As(Var("t"),NoAnnoList(Tuple([Var("trm1"),Var("trm2")]))),NoAnnoList(Tuple([Var("trm1"),Var("trm2")])),[WhereClause(Seq(BA(CallT(SVar("is-tuple"),[],[]),Var("t")),Seq(BA(CallT(SVar("eq"),[],[]),NoAnnoList(Tuple([App(CallT(SVar("get-constructor"),[],[]),Var("trm1")),App(CallT(SVar("get-constructor"),[],[]),Var("trm2"))]))),Seq(BA(CallT(SVar("eq"),[],[]),NoAnnoList(Tuple([App(Seq(CallT(SVar("get-arguments"),[],[]),CallT(SVar("length"),[],[])),Var("trm1")),App(Seq(CallT(SVar("get-arguments"),[],[]),CallT(SVar("length"),[],[])),Var("trm2"))]))),BA(Not(CallT(SVar("is-list"),[],[])),Var("trm1"))))))]))),SDefT("same-signature",[],[VarDec("t1",ConstType(SortNoArgs("ATerm")))],SRule(Rule(Var("t"),Var("t"),[WhereClause(BA(CallT(SVar("same-signature"),[],[]),NoAnnoList(Tuple([Var("t1"),Var("t")]))))]))),SDefT("violates-homomorphism-list",[],[],Seq(Match(NoAnnoList(Tuple([NoAnnoList(List([Var("ortrm")])),NoAnnoList(List([Var("newtrm")]))]))),Where(Not(BA(CallT(SVar("is-related-to-fuzzy"),[],[Var("ortrm")]),Var("newtrm")))))),SDefT("is-insertion",[],[VarDec("origin-elems",ConstType(SortNoArgs("ATerm")))],SRule(Rule(Var("new-elem"),Var("new-elem"),[WhereClause(Seq(BA(Match(NoAnnoList(ListTail([Var("or-elem")],Var("tail")))),Var("origin-elems")),Seq(BA(Not(CallT(SVar("is-related-to"),[],[Var("or-elem")])),Var("new-elem")),BA(CallT(SVar("is-insertion"),[],[Var("tail")]),Var("new-elem")))))]))),SDefT("is-insertion",[],[VarDec("origin-elems",ConstType(SortNoArgs("ATerm")))],BA(Match(NoAnnoList(List([]))),Var("origin-elems"))),SDefT("is-deletion",[],[VarDec("new-elems",ConstType(SortNoArgs("ATerm")))],Seq(Match(Var("origin-elem")),BA(Not(CallT(SVar("fetch"),[CallT(SVar("is-related-to"),[],[Var("origin-elem")])],[])),Var("new-elems")))),SDefT("is-related-to",[],[VarDec("origin-node",ConstType(SortNoArgs("ATerm")))],SRule(Rule(Var("node"),Var("node"),[WhereClause(GuardedLChoice(BA(CallT(SVar("equal"),[],[]),NoAnnoList(Tuple([Var("origin-node"),Var("node")]))),Id,GuardedLChoice(BA(CallT(SVar("equal"),[],[]),NoAnnoList(Tuple([App(CallT(SVar("origin-term"),[],[]),Var("origin-node")),Var("node")]))),Id,BA(CallT(SVar("equal"),[],[]),NoAnnoList(Tuple([App(CallT(SVar("origin-term"),[],[]),Var("origin-node")),App(CallT(SVar("origin-term"),[],[]),Var("node"))]))))))]))),SDefT("is-related-to",[],[],SRule(Rule(NoAnnoList(Tuple([Var("origin-node"),Var("node")])),NoAnnoList(Tuple([Var("origin-node"),Var("node")])),[WhereClause(BA(CallT(SVar("is-related-to"),[],[Var("origin-node")]),Var("node")))]))),SDefT("is-related-to-fuzzy",[],[VarDec("origin-node",ConstType(SortNoArgs("ATerm")))],SRule(Rule(Var("node"),Var("node"),[WhereClause(BA(GuardedLChoice(CallT(SVar("oncetd"),[CallT(SVar("origin-subfragment"),[],[Var("origin-node")])],[]),Id,CallT(SVar("topdown"),[Not(CallT(SVar("has-origin-term"),[],[]))],[])),Var("node")))]))),SDefT("origin-subfragment",[],[VarDec("origin-node",ConstType(SortNoArgs("ATerm")))],SRule(Rule(Var("node"),Var("node"),[WhereClause(Seq(Assign(Var("start-offset"),App(CallT(SVar("origin-start-offset"),[],[]),Var("node"))),Seq(Assign(Var("end-offset"),App(CallT(SVar("origin-end-offset"),[],[]),Var("node"))),Seq(BA(CallT(SVar("leq"),[],[]),NoAnnoList(Tuple([App(CallT(SVar("origin-leftmost-offset"),[],[]),Var("origin-node")),Var("start-offset")]))),BA(CallT(SVar("leq"),[],[]),NoAnnoList(Tuple([Var("end-offset"),App(CallT(SVar("origin-rightmost-offset"),[],[]),Var("origin-node"))])))))))]))),SDefT("origin-leftmost-offset",[],[],GuardedLChoice(CallT(SVar("origin-start-offset"),[],[]),Id,Seq(CallT(SVar("get-arguments"),[],[]),CallT(SVar("fetch-elem"),[CallT(SVar("origin-leftmost-offset"),[],[])],[])))),SDefT("origin-rightmost-offset",[],[],GuardedLChoice(CallT(SVar("origin-end-offset"),[],[]),Id,Seq(CallT(SVar("get-arguments"),[],[]),Seq(CallT(SVar("reverse"),[],[]),CallT(SVar("fetch-elem"),[CallT(SVar("origin-rightmost-offset"),[],[])],[])))))])])