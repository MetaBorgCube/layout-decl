Module("signatures/Haskell-Layout-sig",[Imports([Import("signatures/Haskell-Identifiers-sig")]),Signature([Constructors([OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("WhiteChar")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("AnyNoSymbol")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("Dashes")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("Comment")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("EOF")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("NComment")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("NCommentContent")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("NCommentText")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("L-Char")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("Hyphen")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("CurlyOpen")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("Newline")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("NoNewlineLayout")))),OpDeclInj(FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("NewLineLayout"))))])])])