Module("pp/Haskell-Syntax-pp",[Imports([Import("libstratego-gpp"),Import("libspoofax/sdf/pp"),Import("libspoofax/term/origin"),Import("libspoofax/term/annotation"),Import("libstratego-sglr"),Import("libstratego-sglr"),Import("signatures/Haskell-Syntax-sig")]),Imports([Import("signatures/Haskell-Layout-sig"),Import("signatures/Haskell-Identifiers-sig"),Import("signatures/Haskell-Keywords-sig"),Import("signatures/Haskell-Identifier-Sorts-sig"),Import("signatures/Haskell-Numbers-sig"),Import("signatures/Haskell-Strings-sig"),Import("signatures/Haskell-Literals-sig"),Import("signatures/Haskell-Modules-sig"),Import("signatures/Haskell-Import-Export-sig"),Import("signatures/Haskell-Types-sig"),Import("signatures/Haskell-Records-sig"),Import("signatures/Haskell-Type-Declarations-sig"),Import("signatures/Haskell-Type-Classes-sig"),Import("signatures/Haskell-Signature-Declarations-sig"),Import("signatures/Haskell-Expressions-sig"),Import("signatures/Haskell-Case-Alternatives-sig"),Import("signatures/Haskell-Value-Definitions-sig"),Import("signatures/Haskell-Patterns-sig"),Import("signatures/Haskell-Qualifiers-sig"),Import("signatures/Haskell-List-Comprehensions-sig"),Import("signatures/Haskell-Statements-sig")]),Imports([Import("pp/Haskell-Layout-pp"),Import("pp/Haskell-Identifiers-pp"),Import("pp/Haskell-Keywords-pp"),Import("pp/Haskell-Identifier-Sorts-pp"),Import("pp/Haskell-Numbers-pp"),Import("pp/Haskell-Strings-pp"),Import("pp/Haskell-Literals-pp"),Import("pp/Haskell-Modules-pp"),Import("pp/Haskell-Import-Export-pp"),Import("pp/Haskell-Types-pp"),Import("pp/Haskell-Records-pp"),Import("pp/Haskell-Type-Declarations-pp"),Import("pp/Haskell-Type-Classes-pp"),Import("pp/Haskell-Signature-Declarations-pp"),Import("pp/Haskell-Expressions-pp"),Import("pp/Haskell-Case-Alternatives-pp"),Import("pp/Haskell-Value-Definitions-pp"),Import("pp/Haskell-Patterns-pp"),Import("pp/Haskell-Qualifiers-pp"),Import("pp/Haskell-List-Comprehensions-pp"),Import("pp/Haskell-Statements-pp")]),Strategies([SDefNoArgs("prettyprint-example",CallNoArgs(SVar("prettyprint-Haskell"))),SDefNoArgs("prettyprint-Haskell",Fail),SDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Fail)]),Strategies([SDefNoArgs("prettyprint-SDF-start-symbols",CallNoArgs(SVar("prettyprint-Haskell-start-symbols"))),SDefNoArgs("prettyprint-Haskell-start-symbols",Fail)])])