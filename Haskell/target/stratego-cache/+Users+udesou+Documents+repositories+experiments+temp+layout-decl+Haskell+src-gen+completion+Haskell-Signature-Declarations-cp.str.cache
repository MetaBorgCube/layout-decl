Module("completion/Haskell-Signature-Declarations-cp",[Imports([Import("libstratego-gpp"),ImportWildcard("libspoofax/editor/completion")]),Imports([Import("signatures/Haskell-Signature-Declarations-sig")]),Imports([Import("completion/Haskell-Type-Classes-cp"),Import("completion/Haskell-Types-cp"),Import("completion/Haskell-Identifier-Sorts-cp")]),Rules([RDefT("suggest-completions",[],[DefaultVarDec("completions")],Rule(NoAnnoList(Op("Decl-Plhdr",[])),App(CallT(SVar("suggest-completions"),[],[Var("completions")]),NoAnnoList(Op("Signdecl-Plhdr",[]))),Seq(BA(Not(CallNoArgs(SVar("is-expanded"))),NoAnnoList(Tuple([NoAnnoList(Op("Decl-Plhdr",[])),NoAnnoList(Op("Signdecl-Plhdr",[]))]))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("is-expanded")),RuleNoCond(NoAnnoList(Tuple([NoAnnoList(Op("Decl-Plhdr",[])),NoAnnoList(Op("Signdecl-Plhdr",[]))])),RootApp(Id)))])))),RDefT("suggest-completions",[],[DefaultVarDec("completions")],RuleNoCond(NoAnnoList(Op("Signdecl-Plhdr",[])),App(Seq(CallT(SVar("add-completions"),[],[NoAnnoList(Tuple([NoAnnoList(Str("\"SignDecl\"")),NoAnnoList(Op("SignDecl",[App(Call(SVar("try"),[CallT(SVar("inline-completions"),[],[NoAnnoList(Op("Signdecl-Plhdr",[]))])]),NoAnnoList(Op("Vars-Plhdr",[]))),NoAnnoList(Op("Some",[NoAnnoList(Op("CURSOR_ELEMENT",[]))])),App(Call(SVar("try"),[CallT(SVar("inline-completions"),[],[NoAnnoList(Op("Signdecl-Plhdr",[]))])]),NoAnnoList(Op("Type-Plhdr",[])))]))]))]),Fail),Var("completions"))))]),Rules([RDefNoArgs("is-left-recursive",Rule(NoAnnoList(Str("\"Signdecl\"")),App(CallNoArgs(SVar("is-left-recursive")),NoAnnoList(Str("\"Decl\""))),BA(Not(CallNoArgs(SVar("is-lexical-completion-sort"))),NoAnnoList(Str("\"Signdecl\""))))),RDefNoArgs("is-right-recursive",Rule(NoAnnoList(Str("\"Signdecl\"")),App(CallNoArgs(SVar("is-right-recursive")),NoAnnoList(Str("\"Decl\""))),BA(Not(CallNoArgs(SVar("is-lexical-completion-sort"))),NoAnnoList(Str("\"Signdecl\""))))),RDefNoArgs("is-Decl-completion-sort",RuleNoCond(NoAnnoList(Str("\"Signdecl\"")),RootApp(Id)))]),Rules([SDefNoArgs("is-SDF-placeholder",Match(NoAnnoList(Op("Decl-Plhdr",[])))),SDefNoArgs("is-SDF-placeholder",Match(NoAnnoList(Op("Signdecl-Plhdr",[])))),SDefNoArgs("is-SDF-placeholder",Match(NoAnnoList(Op("Vars-Plhdr",[])))),SDefNoArgs("is-SDF-placeholder",Match(NoAnnoList(Op("Context-Plhdr",[])))),SDefNoArgs("is-SDF-placeholder",Match(NoAnnoList(Op("Type-Plhdr",[]))))])])