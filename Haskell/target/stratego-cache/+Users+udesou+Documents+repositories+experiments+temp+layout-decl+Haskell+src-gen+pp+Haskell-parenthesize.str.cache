Module("pp/Haskell-parenthesize",[Imports([Import("libstratego-lib"),ImportWildcard("signatures")]),Strategies([SDefNoArgs("io-Haskell-parenthesize",Call(SVar("io-wrap"),[CallNoArgs(SVar("parenthesize-Haskell"))])),SDefNoArgs("parenthesize-Haskell",Call(SVar("innermost"),[CallNoArgs(SVar("HaskellParenthesize"))]))]),Rules([RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("SemiAfter",[Var("t_0")])),NoAnnoList(Op("SemiAfter",[NoAnnoList(Op("Parenthetical",[Var("t_0")]))])),BA(Choice(Match(NoAnnoList(Op("SemiBefore",[Wld]))),Choice(Match(NoAnnoList(Op("DeclSeq",[Wld,Wld]))),Fail)),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("TFunBin",[Var("t_0"),Var("t_1")])),NoAnnoList(Op("TFunBin",[NoAnnoList(Op("Parenthetical",[Var("t_0")])),Var("t_1")])),BA(Choice(Match(NoAnnoList(Op("TFunBin",[Wld,Wld]))),Fail),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("Negation",[Var("t_0")])),NoAnnoList(Op("Negation",[NoAnnoList(Op("Parenthetical",[Var("t_0")]))])),BA(Choice(Match(NoAnnoList(Op("Typed",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("OpApp",[Wld,Wld,Wld]))),Fail)),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("SemiAfter",[Var("t_0")])),NoAnnoList(Op("SemiAfter",[NoAnnoList(Op("Parenthetical",[Var("t_0")]))])),BA(Choice(Match(NoAnnoList(Op("TopdeclSeqOffside",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("SemiBefore",[Wld]))),Fail)),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("SemiBefore",[Var("t_0")])),NoAnnoList(Op("SemiBefore",[NoAnnoList(Op("Parenthetical",[Var("t_0")]))])),BA(Choice(Match(NoAnnoList(Op("DeclSeq",[Wld,Wld]))),Fail),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("AppBin",[Var("t_0"),Var("t_1")])),NoAnnoList(Op("AppBin",[NoAnnoList(Op("Parenthetical",[Var("t_0")])),Var("t_1")])),BA(Choice(Match(NoAnnoList(Op("Negation",[Wld]))),Choice(Match(NoAnnoList(Op("Abs",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("If",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("Let",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("Typed",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("Case",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("Do",[Wld]))),Choice(Match(NoAnnoList(Op("OpApp",[Wld,Wld,Wld]))),Fail)))))))),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("AppBin",[Var("t_0"),Var("t_1")])),NoAnnoList(Op("AppBin",[Var("t_0"),NoAnnoList(Op("Parenthetical",[Var("t_1")]))])),BA(Choice(Match(NoAnnoList(Op("AppBin",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("Typed",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("Negation",[Wld]))),Choice(Match(NoAnnoList(Op("OpApp",[Wld,Wld,Wld]))),Fail)))),Var("t_1")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("Named",[Var("t_0"),Var("t_1")])),NoAnnoList(Op("Named",[Var("t_0"),NoAnnoList(Op("Parenthetical",[Var("t_1")]))])),BA(Choice(Match(NoAnnoList(Op("Labeled",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("AppBin",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("Typed",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("OpApp",[Wld,Wld,Wld]))),Fail)))),Var("t_1")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("SemiAfter",[Var("t_0")])),NoAnnoList(Op("SemiAfter",[NoAnnoList(Op("Parenthetical",[Var("t_0")]))])),BA(Choice(Match(NoAnnoList(Op("SemiBefore",[Wld]))),Choice(Match(NoAnnoList(Op("AltSeqOffside",[Wld,Wld]))),Fail)),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("TAppBin",[Var("t_0"),Var("t_1")])),NoAnnoList(Op("TAppBin",[NoAnnoList(Op("Parenthetical",[Var("t_0")])),Var("t_1")])),BA(Choice(Match(NoAnnoList(Op("TFunBin",[Wld,Wld]))),Fail),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("TAppBin",[Var("t_0"),Var("t_1")])),NoAnnoList(Op("TAppBin",[Var("t_0"),NoAnnoList(Op("Parenthetical",[Var("t_1")]))])),BA(Choice(Match(NoAnnoList(Op("TAppBin",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("TFunBin",[Wld,Wld]))),Fail)),Var("t_1")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("SemiBefore",[Var("t_0")])),NoAnnoList(Op("SemiBefore",[NoAnnoList(Op("Parenthetical",[Var("t_0")]))])),BA(Choice(Match(NoAnnoList(Op("AltSeqOffside",[Wld,Wld]))),Fail),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("Labeled",[Var("t_0"),Var("t_1")])),NoAnnoList(Op("Labeled",[NoAnnoList(Op("Parenthetical",[Var("t_0")])),Var("t_1")])),BA(Choice(Match(NoAnnoList(Op("Negation",[Wld]))),Choice(Match(NoAnnoList(Op("Abs",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("AppBin",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("If",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("Let",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("Case",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("OpApp",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("Do",[Wld]))),Fail)))))))),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("SemiAfter",[Var("t_0")])),NoAnnoList(Op("SemiAfter",[NoAnnoList(Op("Parenthetical",[Var("t_0")]))])),BA(Choice(Match(NoAnnoList(Op("SemiBefore",[Wld]))),Choice(Match(NoAnnoList(Op("ImportdeclSeq",[Wld,Wld]))),Fail)),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("SemiAfter",[Var("t_0")])),NoAnnoList(Op("SemiAfter",[NoAnnoList(Op("Parenthetical",[Var("t_0")]))])),BA(Choice(Match(NoAnnoList(Op("StmtSeq",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("SemiBefore",[Wld]))),Fail)),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("Typed",[Var("t_0"),Var("t_1"),Var("t_2")])),NoAnnoList(Op("Typed",[NoAnnoList(Op("Parenthetical",[Var("t_0")])),Var("t_1"),Var("t_2")])),BA(Choice(Match(NoAnnoList(Op("Let",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("If",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("Abs",[Wld,Wld]))),Fail))),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("SemiBefore",[Var("t_0")])),NoAnnoList(Op("SemiBefore",[NoAnnoList(Op("Parenthetical",[Var("t_0")]))])),BA(Choice(Match(NoAnnoList(Op("StmtSeq",[Wld,Wld]))),Fail),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("OpApp",[Var("t_0"),Var("t_1"),Var("t_2")])),NoAnnoList(Op("OpApp",[NoAnnoList(Op("Parenthetical",[Var("t_0")])),Var("t_1"),Var("t_2")])),BA(Choice(Match(NoAnnoList(Op("If",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("Let",[Wld,Wld]))),Choice(Match(NoAnnoList(Op("Typed",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("OpApp",[Wld,Wld,Wld]))),Choice(Match(NoAnnoList(Op("Abs",[Wld,Wld]))),Fail))))),Var("t_0")))),RDefNoArgs("HaskellParenthesize",Rule(NoAnnoList(Op("OpApp",[Var("t_0"),Var("t_1"),Var("t_2")])),NoAnnoList(Op("OpApp",[Var("t_0"),Var("t_1"),NoAnnoList(Op("Parenthetical",[Var("t_2")]))])),BA(Choice(Match(NoAnnoList(Op("Typed",[Wld,Wld,Wld]))),Fail),Var("t_2"))))]),Signature([Constructors([OpDecl("Parenthetical",FunType([ConstType(SortNoArgs("Unknown"))],ConstType(SortNoArgs("Unknown"))))])])])