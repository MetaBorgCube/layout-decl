Module("pp/Haskell-Identifier-Sorts-pp",[Imports([Import("libstratego-gpp"),Import("libspoofax/sdf/pp"),Import("libspoofax/term/origin"),Import("libspoofax/term/annotation"),Import("libstratego-sglr"),Import("libstratego-sglr"),Import("signatures/Haskell-Identifier-Sorts-sig")]),Imports([Import("signatures/Haskell-Identifiers-sig"),Import("signatures/Haskell-Keywords-sig")]),Imports([Import("pp/Haskell-Identifiers-pp"),Import("pp/Haskell-Keywords-pp")]),Strategies([SDefNoArgs("prettyprint-example",CallNoArgs(SVar("prettyprint-Haskell"))),SDefNoArgs("prettyprint-Haskell",Fail),SDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Fail)]),Strategies([SDefNoArgs("prettyprint-SDF-start-symbols",CallNoArgs(SVar("prettyprint-Haskell-start-symbols"))),SDefNoArgs("prettyprint-Haskell-start-symbols",Fail)]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Varid"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Tyvar"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Varid"))),BA(Match(NoAnnoList(Str("\"Varid\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Tyvar"))),BA(Match(NoAnnoList(Str("\"Tyvar\""))),Var("sort")))),SDefNoArgs("prettyprint-Haskell-Varid",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-Tyvar",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),RDefNoArgs("prettyprint-Haskell-Varid",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Varid")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Tyvar",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Tyvar")),Var("h"))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Vars"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Vars"))),BA(Match(NoAnnoList(Str("\"Vars\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-Vars",Rule(NoAnnoList(Op("Snoc",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Vars"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\",\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Var"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-Vars",Match(NoAnnoList(Op("Snoc",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Snoc",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Vars\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Snoc",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Vars\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Snoc",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Vars\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Vars",Rule(NoAnnoList(Op("Ins",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qvar"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Vars",Match(NoAnnoList(Op("Ins",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Ins",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Vars\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Ins",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Vars\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Ins",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Vars\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-Vars",Fail),RDefNoArgs("prettyprint-Haskell-Vars",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Vars")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Var",RuleNoCond(NoAnnoList(Op("Var-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Var\""))]))]))]))])))),SDefNoArgs("is-Haskell-Var",Match(NoAnnoList(Op("Var-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Vars",RuleNoCond(NoAnnoList(Op("Vars-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Vars\""))]))]))]))])))),SDefNoArgs("is-Haskell-Vars",Match(NoAnnoList(Op("Vars-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qvar",RuleNoCond(NoAnnoList(Op("Qvar-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvar\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvar",Match(NoAnnoList(Op("Qvar-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Var",RuleNoCond(NoAnnoList(Op("Var-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Var\""))]))]))]))])))),SDefNoArgs("is-Haskell-Var",Match(NoAnnoList(Op("Var-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Vars",RuleNoCond(NoAnnoList(Op("Vars-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Vars\""))]))]))]))])))),SDefNoArgs("is-Haskell-Vars",Match(NoAnnoList(Op("Vars-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qvar",RuleNoCond(NoAnnoList(Op("Qvar-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvar\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvar",Match(NoAnnoList(Op("Qvar-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Comma"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Gcon"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Comma"))),BA(Match(NoAnnoList(Str("\"Comma\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Gcon"))),BA(Match(NoAnnoList(Str("\"Gcon\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-Gcon",Rule(NoAnnoList(Op("Unit",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"(\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\")\""))]))])))))])),SDefNoArgs("is-Haskell-Gcon",Match(NoAnnoList(Op("Unit",[])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Unit",[]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Unit",[]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Unit",[]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Gcon",Rule(NoAnnoList(Op("EmptyList",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"[\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"]\""))]))])))))])),SDefNoArgs("is-Haskell-Gcon",Match(NoAnnoList(Op("EmptyList",[])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("EmptyList",[]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("EmptyList",[]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("EmptyList",[]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Gcon",Rule(NoAnnoList(Op("Product",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"(\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-H-list"),[CallNoArgs(SVar("prettyprint-Haskell-Comma"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\")\""))]))])))))])),SDefNoArgs("is-Haskell-Gcon",Match(NoAnnoList(Op("Product",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Product",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Product",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Product",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Comma",Rule(NoAnnoList(Op("Comma",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\",\""))]))])))))])),SDefNoArgs("is-Haskell-Comma",Match(NoAnnoList(Op("Comma",[])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Comma",[]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Comma\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Comma",[]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Comma\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Comma",[]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Comma\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Gcon",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Gcon")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qcon"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Comma",Fail),SDefNoArgs("is-Haskell-Gcon",Fail),RDefNoArgs("prettyprint-Haskell-Comma",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Comma")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Gcon",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Gcon")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Comma",RuleNoCond(NoAnnoList(Op("Comma-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Comma\""))]))]))]))])))),SDefNoArgs("is-Haskell-Comma",Match(NoAnnoList(Op("Comma-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Gcon",RuleNoCond(NoAnnoList(Op("Gcon-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Gcon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Gcon",Match(NoAnnoList(Op("Gcon-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qcon",RuleNoCond(NoAnnoList(Op("Qcon-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qcon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qcon",Match(NoAnnoList(Op("Qcon-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Comma",RuleNoCond(NoAnnoList(Op("Comma-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Comma\""))]))]))]))])))),SDefNoArgs("is-Haskell-Comma",Match(NoAnnoList(Op("Comma-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Gcon",RuleNoCond(NoAnnoList(Op("Gcon-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Gcon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Gcon",Match(NoAnnoList(Op("Gcon-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qcon",RuleNoCond(NoAnnoList(Op("Qcon-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qcon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qcon",Match(NoAnnoList(Op("Qcon-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qvarid"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Op"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qvarsym"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Varop"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qvarop"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Conop"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qconop"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qop"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Gconsym"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-ConsOp"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qconsym"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Consym"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Var"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qvar"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Con"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qcon"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qvarid"))),BA(Match(NoAnnoList(Str("\"Qvarid\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Op"))),BA(Match(NoAnnoList(Str("\"Op\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qvarsym"))),BA(Match(NoAnnoList(Str("\"Qvarsym\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Varop"))),BA(Match(NoAnnoList(Str("\"Varop\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qvarop"))),BA(Match(NoAnnoList(Str("\"Qvarop\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Conop"))),BA(Match(NoAnnoList(Str("\"Conop\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qconop"))),BA(Match(NoAnnoList(Str("\"Qconop\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qop"))),BA(Match(NoAnnoList(Str("\"Qop\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Gconsym"))),BA(Match(NoAnnoList(Str("\"Gconsym\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-ConsOp"))),BA(Match(NoAnnoList(Str("\"ConsOp\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qconsym"))),BA(Match(NoAnnoList(Str("\"Qconsym\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Consym"))),BA(Match(NoAnnoList(Str("\"Consym\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Var"))),BA(Match(NoAnnoList(Str("\"Var\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qvar"))),BA(Match(NoAnnoList(Str("\"Qvar\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Con"))),BA(Match(NoAnnoList(Str("\"Con\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qcon"))),BA(Match(NoAnnoList(Str("\"Qcon\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-Qvarid",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qvarid")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Varid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qvarid",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qvarid")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-QVARID"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Var",Rule(NoAnnoList(Op("Var",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Varid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Var",Match(NoAnnoList(Op("Var",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Var",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Var\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Var",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Var\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Var",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Var\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Qvar",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qvar")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qvarid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Op",Rule(NoAnnoList(Op("Op",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Varop"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Op",Match(NoAnnoList(Op("Op",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Op",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Op\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Op",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Op\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Op",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Op\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Op",Rule(NoAnnoList(Op("ConOp",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Conop"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Op",Match(NoAnnoList(Op("ConOp",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ConOp",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Op\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ConOp",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Op\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ConOp",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Op\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Qvarsym",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qvarsym")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Varsym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qvarsym",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qvarsym")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qvarsym1"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Varop",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Varop")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Varsym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Varop",Rule(NoAnnoList(Op("PrefOp",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"`\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Varid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"`\""))]))])))))])),SDefNoArgs("is-Haskell-Varop",Match(NoAnnoList(Op("PrefOp",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefOp",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Varop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefOp",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Varop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefOp",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Varop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Qvarop",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qvarop")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qvarsym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qvarop",Rule(NoAnnoList(Op("PrefOp",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"`\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qvarid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"`\""))]))])))))])),SDefNoArgs("is-Haskell-Qvarop",Match(NoAnnoList(Op("PrefOp",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefOp",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qvarop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefOp",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qvarop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefOp",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qvarop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Conop",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Conop")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Consym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Conop",Rule(NoAnnoList(Op("PrefCon",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"`\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Conid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"`\""))]))])))))])),SDefNoArgs("is-Haskell-Conop",Match(NoAnnoList(Op("PrefCon",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefCon",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Conop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefCon",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Conop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefCon",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Conop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Qconop",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qconop")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Gconsym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qconop",Rule(NoAnnoList(Op("PrefCon",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"`\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qconid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"`\""))]))])))))])),SDefNoArgs("is-Haskell-Qconop",Match(NoAnnoList(Op("PrefCon",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefCon",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qconop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefCon",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qconop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("PrefCon",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qconop\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Qop",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qop")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qvarop"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qop",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qop")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qconop"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Gconsym",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Gconsym")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qconsym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Gconsym",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Gconsym")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-ConsOp"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-ConsOp",Rule(NoAnnoList(Op("ConsOp",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-CONSOP"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-ConsOp",Match(NoAnnoList(Op("ConsOp",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ConsOp",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"ConsOp\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ConsOp",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"ConsOp\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ConsOp",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"ConsOp\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Qconsym",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qconsym")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Consym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qconsym",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qconsym")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-QCONSYM"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Consym",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Consym")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-CONSYM"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Var",Rule(NoAnnoList(Op("BinOp",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"(\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Varsym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\")\""))]))])))))])),SDefNoArgs("is-Haskell-Var",Match(NoAnnoList(Op("BinOp",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinOp",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Var\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinOp",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Var\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinOp",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Var\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Qvar",Rule(NoAnnoList(Op("BinOp",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"(\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qvarsym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\")\""))]))])))))])),SDefNoArgs("is-Haskell-Qvar",Match(NoAnnoList(Op("BinOp",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinOp",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qvar\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinOp",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qvar\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinOp",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qvar\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Con",Rule(NoAnnoList(Op("BinCon",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"(\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Consym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\")\""))]))])))))])),SDefNoArgs("is-Haskell-Con",Match(NoAnnoList(Op("BinCon",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinCon",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Con\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinCon",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Con\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinCon",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Con\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Qcon",Rule(NoAnnoList(Op("BinCon",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"(\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qconsym"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\")\""))]))])))))])),SDefNoArgs("is-Haskell-Qcon",Match(NoAnnoList(Op("BinCon",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinCon",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinCon",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BinCon",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Qcon\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-Qvarid",Fail),SDefNoArgs("is-Haskell-Op",Fail),SDefNoArgs("is-Haskell-Qvarsym",Fail),SDefNoArgs("is-Haskell-Varop",Fail),SDefNoArgs("is-Haskell-Qvarop",Fail),SDefNoArgs("is-Haskell-Conop",Fail),SDefNoArgs("is-Haskell-Qconop",Fail),SDefNoArgs("is-Haskell-Qop",Fail),SDefNoArgs("is-Haskell-Gconsym",Fail),SDefNoArgs("is-Haskell-ConsOp",Fail),SDefNoArgs("is-Haskell-Qconsym",Fail),SDefNoArgs("is-Haskell-Consym",Fail),SDefNoArgs("is-Haskell-Var",Fail),SDefNoArgs("is-Haskell-Qvar",Fail),SDefNoArgs("is-Haskell-Con",Fail),SDefNoArgs("is-Haskell-Qcon",Fail),RDefNoArgs("prettyprint-Haskell-Qvarid",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qvarid")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Op",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Op")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qvarsym",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qvarsym")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Varop",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Varop")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qvarop",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qvarop")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Conop",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Conop")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qconop",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qconop")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qop",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qop")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Gconsym",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Gconsym")),Var("h")))),RDefNoArgs("prettyprint-Haskell-ConsOp",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-ConsOp")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qconsym",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qconsym")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Consym",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Consym")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Var",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Var")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qvar",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qvar")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Con",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Con")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qcon",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qcon")),Var("h")))),RDefNoArgs("prettyprint-Haskell-QVARID",RuleNoCond(NoAnnoList(Op("QVARID-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$QVARID\""))]))]))]))])))),SDefNoArgs("is-Haskell-QVARID",Match(NoAnnoList(Op("QVARID-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Op",RuleNoCond(NoAnnoList(Op("Op-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Op\""))]))]))]))])))),SDefNoArgs("is-Haskell-Op",Match(NoAnnoList(Op("Op-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qvarsym1",RuleNoCond(NoAnnoList(Op("Qvarsym1-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvarsym1\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvarsym1",Match(NoAnnoList(Op("Qvarsym1-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Varop",RuleNoCond(NoAnnoList(Op("Varop-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Varop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Varop",Match(NoAnnoList(Op("Varop-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Varid",RuleNoCond(NoAnnoList(Op("Varid-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Varid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Varid",Match(NoAnnoList(Op("Varid-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qvarid",RuleNoCond(NoAnnoList(Op("Qvarid-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvarid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvarid",Match(NoAnnoList(Op("Qvarid-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Conop",RuleNoCond(NoAnnoList(Op("Conop-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Conop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Conop",Match(NoAnnoList(Op("Conop-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Conid",RuleNoCond(NoAnnoList(Op("Conid-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Conid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Conid",Match(NoAnnoList(Op("Conid-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qconid",RuleNoCond(NoAnnoList(Op("Qconid-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qconid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qconid",Match(NoAnnoList(Op("Qconid-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qvarop",RuleNoCond(NoAnnoList(Op("Qvarop-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvarop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvarop",Match(NoAnnoList(Op("Qvarop-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qop",RuleNoCond(NoAnnoList(Op("Qop-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qop",Match(NoAnnoList(Op("Qop-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qconop",RuleNoCond(NoAnnoList(Op("Qconop-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qconop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qconop",Match(NoAnnoList(Op("Qconop-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Gconsym",RuleNoCond(NoAnnoList(Op("Gconsym-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Gconsym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Gconsym",Match(NoAnnoList(Op("Gconsym-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-ConsOp",RuleNoCond(NoAnnoList(Op("ConsOp-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$ConsOp\""))]))]))]))])))),SDefNoArgs("is-Haskell-ConsOp",Match(NoAnnoList(Op("ConsOp-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-CONSOP",RuleNoCond(NoAnnoList(Op("CONSOP-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$CONSOP\""))]))]))]))])))),SDefNoArgs("is-Haskell-CONSOP",Match(NoAnnoList(Op("CONSOP-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-QCONSYM",RuleNoCond(NoAnnoList(Op("QCONSYM-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$QCONSYM\""))]))]))]))])))),SDefNoArgs("is-Haskell-QCONSYM",Match(NoAnnoList(Op("QCONSYM-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-CONSYM",RuleNoCond(NoAnnoList(Op("CONSYM-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$CONSYM\""))]))]))]))])))),SDefNoArgs("is-Haskell-CONSYM",Match(NoAnnoList(Op("CONSYM-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Var",RuleNoCond(NoAnnoList(Op("Var-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Var\""))]))]))]))])))),SDefNoArgs("is-Haskell-Var",Match(NoAnnoList(Op("Var-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Varsym",RuleNoCond(NoAnnoList(Op("Varsym-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Varsym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Varsym",Match(NoAnnoList(Op("Varsym-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qvar",RuleNoCond(NoAnnoList(Op("Qvar-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvar\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvar",Match(NoAnnoList(Op("Qvar-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qvarsym",RuleNoCond(NoAnnoList(Op("Qvarsym-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvarsym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvarsym",Match(NoAnnoList(Op("Qvarsym-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Con",RuleNoCond(NoAnnoList(Op("Con-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Con\""))]))]))]))])))),SDefNoArgs("is-Haskell-Con",Match(NoAnnoList(Op("Con-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Consym",RuleNoCond(NoAnnoList(Op("Consym-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Consym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Consym",Match(NoAnnoList(Op("Consym-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qcon",RuleNoCond(NoAnnoList(Op("Qcon-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qcon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qcon",Match(NoAnnoList(Op("Qcon-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qconsym",RuleNoCond(NoAnnoList(Op("Qconsym-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qconsym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qconsym",Match(NoAnnoList(Op("Qconsym-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-QVARID",RuleNoCond(NoAnnoList(Op("QVARID-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$QVARID\""))]))]))]))])))),SDefNoArgs("is-Haskell-QVARID",Match(NoAnnoList(Op("QVARID-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Op",RuleNoCond(NoAnnoList(Op("Op-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Op\""))]))]))]))])))),SDefNoArgs("is-Haskell-Op",Match(NoAnnoList(Op("Op-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qvarsym1",RuleNoCond(NoAnnoList(Op("Qvarsym1-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvarsym1\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvarsym1",Match(NoAnnoList(Op("Qvarsym1-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Varop",RuleNoCond(NoAnnoList(Op("Varop-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Varop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Varop",Match(NoAnnoList(Op("Varop-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Varid",RuleNoCond(NoAnnoList(Op("Varid-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Varid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Varid",Match(NoAnnoList(Op("Varid-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qvarid",RuleNoCond(NoAnnoList(Op("Qvarid-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvarid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvarid",Match(NoAnnoList(Op("Qvarid-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Conop",RuleNoCond(NoAnnoList(Op("Conop-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Conop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Conop",Match(NoAnnoList(Op("Conop-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Conid",RuleNoCond(NoAnnoList(Op("Conid-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Conid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Conid",Match(NoAnnoList(Op("Conid-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qconid",RuleNoCond(NoAnnoList(Op("Qconid-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qconid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qconid",Match(NoAnnoList(Op("Qconid-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qvarop",RuleNoCond(NoAnnoList(Op("Qvarop-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvarop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvarop",Match(NoAnnoList(Op("Qvarop-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qop",RuleNoCond(NoAnnoList(Op("Qop-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qop",Match(NoAnnoList(Op("Qop-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qconop",RuleNoCond(NoAnnoList(Op("Qconop-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qconop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qconop",Match(NoAnnoList(Op("Qconop-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Gconsym",RuleNoCond(NoAnnoList(Op("Gconsym-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Gconsym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Gconsym",Match(NoAnnoList(Op("Gconsym-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-ConsOp",RuleNoCond(NoAnnoList(Op("ConsOp-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$ConsOp\""))]))]))]))])))),SDefNoArgs("is-Haskell-ConsOp",Match(NoAnnoList(Op("ConsOp-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-CONSOP",RuleNoCond(NoAnnoList(Op("CONSOP-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$CONSOP\""))]))]))]))])))),SDefNoArgs("is-Haskell-CONSOP",Match(NoAnnoList(Op("CONSOP-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-QCONSYM",RuleNoCond(NoAnnoList(Op("QCONSYM-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$QCONSYM\""))]))]))]))])))),SDefNoArgs("is-Haskell-QCONSYM",Match(NoAnnoList(Op("QCONSYM-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-CONSYM",RuleNoCond(NoAnnoList(Op("CONSYM-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$CONSYM\""))]))]))]))])))),SDefNoArgs("is-Haskell-CONSYM",Match(NoAnnoList(Op("CONSYM-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Var",RuleNoCond(NoAnnoList(Op("Var-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Var\""))]))]))]))])))),SDefNoArgs("is-Haskell-Var",Match(NoAnnoList(Op("Var-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Varsym",RuleNoCond(NoAnnoList(Op("Varsym-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Varsym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Varsym",Match(NoAnnoList(Op("Varsym-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qvar",RuleNoCond(NoAnnoList(Op("Qvar-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvar\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvar",Match(NoAnnoList(Op("Qvar-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qvarsym",RuleNoCond(NoAnnoList(Op("Qvarsym-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvarsym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvarsym",Match(NoAnnoList(Op("Qvarsym-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Con",RuleNoCond(NoAnnoList(Op("Con-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Con\""))]))]))]))])))),SDefNoArgs("is-Haskell-Con",Match(NoAnnoList(Op("Con-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Consym",RuleNoCond(NoAnnoList(Op("Consym-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Consym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Consym",Match(NoAnnoList(Op("Consym-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qcon",RuleNoCond(NoAnnoList(Op("Qcon-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qcon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qcon",Match(NoAnnoList(Op("Qcon-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qconsym",RuleNoCond(NoAnnoList(Op("Qconsym-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qconsym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qconsym",Match(NoAnnoList(Op("Qconsym-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Varsym"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qvarsym1"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Varsym"))),BA(Match(NoAnnoList(Str("\"Varsym\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qvarsym1"))),BA(Match(NoAnnoList(Str("\"Qvarsym1\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-Varsym",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Varsym")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-VARSYM"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qvarsym1",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qvarsym1")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-QVARSYM"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Varsym",Fail),SDefNoArgs("is-Haskell-Qvarsym1",Fail),RDefNoArgs("prettyprint-Haskell-Varsym",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Varsym")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qvarsym1",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qvarsym1")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Varsym",RuleNoCond(NoAnnoList(Op("Varsym-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Varsym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Varsym",Match(NoAnnoList(Op("Varsym-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-VARSYM",RuleNoCond(NoAnnoList(Op("VARSYM-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$VARSYM\""))]))]))]))])))),SDefNoArgs("is-Haskell-VARSYM",Match(NoAnnoList(Op("VARSYM-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qvarsym1",RuleNoCond(NoAnnoList(Op("Qvarsym1-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvarsym1\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvarsym1",Match(NoAnnoList(Op("Qvarsym1-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-QVARSYM",RuleNoCond(NoAnnoList(Op("QVARSYM-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$QVARSYM\""))]))]))]))])))),SDefNoArgs("is-Haskell-QVARSYM",Match(NoAnnoList(Op("QVARSYM-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Varsym",RuleNoCond(NoAnnoList(Op("Varsym-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Varsym\""))]))]))]))])))),SDefNoArgs("is-Haskell-Varsym",Match(NoAnnoList(Op("Varsym-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-VARSYM",RuleNoCond(NoAnnoList(Op("VARSYM-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$VARSYM\""))]))]))]))])))),SDefNoArgs("is-Haskell-VARSYM",Match(NoAnnoList(Op("VARSYM-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qvarsym1",RuleNoCond(NoAnnoList(Op("Qvarsym1-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvarsym1\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvarsym1",Match(NoAnnoList(Op("Qvarsym1-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-QVARSYM",RuleNoCond(NoAnnoList(Op("QVARSYM-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$QVARSYM\""))]))]))]))])))),SDefNoArgs("is-Haskell-QVARSYM",Match(NoAnnoList(Op("QVARSYM-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Tycon"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qtycon"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Tycls"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qtycls"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Conid"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qconid"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Con"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Qcon"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Tycon"))),BA(Match(NoAnnoList(Str("\"Tycon\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qtycon"))),BA(Match(NoAnnoList(Str("\"Qtycon\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Tycls"))),BA(Match(NoAnnoList(Str("\"Tycls\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qtycls"))),BA(Match(NoAnnoList(Str("\"Qtycls\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Conid"))),BA(Match(NoAnnoList(Str("\"Conid\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qconid"))),BA(Match(NoAnnoList(Str("\"Qconid\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Con"))),BA(Match(NoAnnoList(Str("\"Con\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Qcon"))),BA(Match(NoAnnoList(Str("\"Qcon\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-Tycon",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Tycon")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-CONID"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qtycon",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qtycon")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Tycon"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qtycon",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qtycon")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-QCONID"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Tycls",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Tycls")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Tycon"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qtycls",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qtycls")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qtycon"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Conid",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Conid")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-CONID"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qconid",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qconid")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Conid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Qconid",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qconid")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-QCONID"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Con",Rule(NoAnnoList(Op("ConId",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Conid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Con",Match(NoAnnoList(Op("ConId",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ConId",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Con\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ConId",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Con\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ConId",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Con\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Qcon",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Qcon")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qconid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Tycon",Fail),SDefNoArgs("is-Haskell-Qtycon",Fail),SDefNoArgs("is-Haskell-Tycls",Fail),SDefNoArgs("is-Haskell-Qtycls",Fail),SDefNoArgs("is-Haskell-Conid",Fail),SDefNoArgs("is-Haskell-Qconid",Fail),SDefNoArgs("is-Haskell-Con",Fail),SDefNoArgs("is-Haskell-Qcon",Fail),RDefNoArgs("prettyprint-Haskell-Tycon",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Tycon")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qtycon",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qtycon")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Tycls",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Tycls")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qtycls",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qtycls")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Conid",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Conid")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qconid",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qconid")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Con",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Con")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Qcon",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Qcon")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Tycls",RuleNoCond(NoAnnoList(Op("Tycls-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Tycls\""))]))]))]))])))),SDefNoArgs("is-Haskell-Tycls",Match(NoAnnoList(Op("Tycls-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Tycon",RuleNoCond(NoAnnoList(Op("Tycon-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Tycon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Tycon",Match(NoAnnoList(Op("Tycon-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qtycls",RuleNoCond(NoAnnoList(Op("Qtycls-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qtycls\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qtycls",Match(NoAnnoList(Op("Qtycls-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qtycon",RuleNoCond(NoAnnoList(Op("Qtycon-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qtycon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qtycon",Match(NoAnnoList(Op("Qtycon-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-CONID",RuleNoCond(NoAnnoList(Op("CONID-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$CONID\""))]))]))]))])))),SDefNoArgs("is-Haskell-CONID",Match(NoAnnoList(Op("CONID-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-QCONID",RuleNoCond(NoAnnoList(Op("QCONID-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$QCONID\""))]))]))]))])))),SDefNoArgs("is-Haskell-QCONID",Match(NoAnnoList(Op("QCONID-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Con",RuleNoCond(NoAnnoList(Op("Con-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Con\""))]))]))]))])))),SDefNoArgs("is-Haskell-Con",Match(NoAnnoList(Op("Con-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Conid",RuleNoCond(NoAnnoList(Op("Conid-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Conid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Conid",Match(NoAnnoList(Op("Conid-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qcon",RuleNoCond(NoAnnoList(Op("Qcon-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qcon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qcon",Match(NoAnnoList(Op("Qcon-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qconid",RuleNoCond(NoAnnoList(Op("Qconid-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qconid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qconid",Match(NoAnnoList(Op("Qconid-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Tycls",RuleNoCond(NoAnnoList(Op("Tycls-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Tycls\""))]))]))]))])))),SDefNoArgs("is-Haskell-Tycls",Match(NoAnnoList(Op("Tycls-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Tycon",RuleNoCond(NoAnnoList(Op("Tycon-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Tycon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Tycon",Match(NoAnnoList(Op("Tycon-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qtycls",RuleNoCond(NoAnnoList(Op("Qtycls-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qtycls\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qtycls",Match(NoAnnoList(Op("Qtycls-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qtycon",RuleNoCond(NoAnnoList(Op("Qtycon-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qtycon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qtycon",Match(NoAnnoList(Op("Qtycon-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-CONID",RuleNoCond(NoAnnoList(Op("CONID-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$CONID\""))]))]))]))])))),SDefNoArgs("is-Haskell-CONID",Match(NoAnnoList(Op("CONID-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-QCONID",RuleNoCond(NoAnnoList(Op("QCONID-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$QCONID\""))]))]))]))])))),SDefNoArgs("is-Haskell-QCONID",Match(NoAnnoList(Op("QCONID-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Con",RuleNoCond(NoAnnoList(Op("Con-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Con\""))]))]))]))])))),SDefNoArgs("is-Haskell-Con",Match(NoAnnoList(Op("Con-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Conid",RuleNoCond(NoAnnoList(Op("Conid-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Conid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Conid",Match(NoAnnoList(Op("Conid-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qcon",RuleNoCond(NoAnnoList(Op("Qcon-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qcon\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qcon",Match(NoAnnoList(Op("Qcon-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qconid",RuleNoCond(NoAnnoList(Op("Qconid-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qconid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qconid",Match(NoAnnoList(Op("Qconid-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Modid"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Modid"))),BA(Match(NoAnnoList(Str("\"Modid\""))),Var("sort")))),SDefNoArgs("prettyprint-Haskell-Modid",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),RDefNoArgs("prettyprint-Haskell-Modid",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Modid")),Var("h"))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-QVARID"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-QCONID"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-QVARSYM"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-QCONSYM"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-QVARID"))),BA(Match(NoAnnoList(Str("\"QVARID\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-QCONID"))),BA(Match(NoAnnoList(Str("\"QCONID\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-QVARSYM"))),BA(Match(NoAnnoList(Str("\"QVARSYM\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-QCONSYM"))),BA(Match(NoAnnoList(Str("\"QCONSYM\""))),Var("sort")))),SDefNoArgs("prettyprint-Haskell-QVARID",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-QCONID",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-QVARSYM",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-QCONSYM",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),RDefNoArgs("prettyprint-Haskell-QVARID",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-QVARID")),Var("h")))),RDefNoArgs("prettyprint-Haskell-QCONID",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-QCONID")),Var("h")))),RDefNoArgs("prettyprint-Haskell-QVARSYM",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-QVARSYM")),Var("h")))),RDefNoArgs("prettyprint-Haskell-QCONSYM",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-QCONSYM")),Var("h"))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-QModid"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Modid"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-QModid"))),BA(Match(NoAnnoList(Str("\"QModid\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Modid"))),BA(Match(NoAnnoList(Str("\"Modid\""))),Var("sort")))),SDefNoArgs("prettyprint-Haskell-QModid",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-Modid",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),RDefNoArgs("prettyprint-Haskell-QModid",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-QModid")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Modid",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Modid")),Var("h"))))])])