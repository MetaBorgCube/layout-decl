Module("pp/Haskell-Strings-pp",[Imports([Import("libstratego-gpp"),Import("libspoofax/sdf/pp"),Import("libspoofax/term/origin"),Import("libspoofax/term/annotation"),Import("libstratego-sglr"),Import("libstratego-sglr"),Import("signatures/Haskell-Strings-sig")]),Imports([Import("signatures/Haskell-Numbers-sig")]),Imports([Import("pp/Haskell-Numbers-pp")]),Strategies([SDefNoArgs("prettyprint-example",CallNoArgs(SVar("prettyprint-Haskell"))),SDefNoArgs("prettyprint-Haskell",Fail),SDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Fail)]),Strategies([SDefNoArgs("prettyprint-SDF-start-symbols",CallNoArgs(SVar("prettyprint-Haskell-start-symbols"))),SDefNoArgs("prettyprint-Haskell-start-symbols",Fail)]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Char"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-String"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-CharChar"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-StringChar"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Escape"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Char"))),BA(Match(NoAnnoList(Str("\"Char\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-String"))),BA(Match(NoAnnoList(Str("\"String\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-CharChar"))),BA(Match(NoAnnoList(Str("\"CharChar\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-StringChar"))),BA(Match(NoAnnoList(Str("\"StringChar\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Escape"))),BA(Match(NoAnnoList(Str("\"Escape\""))),Var("sort")))),SDefNoArgs("prettyprint-Haskell-Char",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-String",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-CharChar",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-StringChar",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-Escape",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),RDefNoArgs("prettyprint-Haskell-Char",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Char")),Var("h")))),RDefNoArgs("prettyprint-Haskell-String",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-String")),Var("h")))),RDefNoArgs("prettyprint-Haskell-CharChar",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-CharChar")),Var("h")))),RDefNoArgs("prettyprint-Haskell-StringChar",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-StringChar")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Escape",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Escape")),Var("h"))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-CharChar"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-StringChar"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-CharEsc"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-ASCII"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-ASCII-SO"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-CharChar"))),BA(Match(NoAnnoList(Str("\"CharChar\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-StringChar"))),BA(Match(NoAnnoList(Str("\"StringChar\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-CharEsc"))),BA(Match(NoAnnoList(Str("\"CharEsc\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-ASCII"))),BA(Match(NoAnnoList(Str("\"ASCII\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-ASCII-SO"))),BA(Match(NoAnnoList(Str("\"ASCII-SO\""))),Var("sort")))),SDefNoArgs("prettyprint-Haskell-CharChar",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-StringChar",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-CharEsc",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-ASCII",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),SDefNoArgs("prettyprint-Haskell-ASCII-SO",Build(NoAnnoList(List([NoAnnoList(Op("S",[RootApp(CallNoArgs(SVar("is-string")))]))])))),RDefNoArgs("prettyprint-Haskell-CharChar",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-CharChar")),Var("h")))),RDefNoArgs("prettyprint-Haskell-StringChar",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-StringChar")),Var("h")))),RDefNoArgs("prettyprint-Haskell-CharEsc",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-CharEsc")),Var("h")))),RDefNoArgs("prettyprint-Haskell-ASCII",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-ASCII")),Var("h")))),RDefNoArgs("prettyprint-Haskell-ASCII-SO",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-ASCII-SO")),Var("h"))))])])