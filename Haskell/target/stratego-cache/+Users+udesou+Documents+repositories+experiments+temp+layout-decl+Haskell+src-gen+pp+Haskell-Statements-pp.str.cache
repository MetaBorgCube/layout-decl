Module("pp/Haskell-Statements-pp",[Imports([Import("libstratego-gpp"),Import("libspoofax/sdf/pp"),Import("libspoofax/term/origin"),Import("libspoofax/term/annotation"),Import("libstratego-sglr"),Import("libstratego-sglr"),Import("signatures/Haskell-Statements-sig")]),Imports([Import("signatures/Haskell-Expressions-sig"),Import("signatures/Haskell-Patterns-sig"),Import("signatures/Haskell-Identifier-Sorts-sig"),Import("signatures/Haskell-Value-Definitions-sig")]),Imports([Import("pp/Haskell-Expressions-pp"),Import("pp/Haskell-Patterns-pp"),Import("pp/Haskell-Identifier-Sorts-pp"),Import("pp/Haskell-Value-Definitions-pp")]),Strategies([SDefNoArgs("prettyprint-example",CallNoArgs(SVar("prettyprint-Haskell"))),SDefNoArgs("prettyprint-Haskell",Fail),SDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Fail)]),Strategies([SDefNoArgs("prettyprint-SDF-start-symbols",CallNoArgs(SVar("prettyprint-Haskell-start-symbols"))),SDefNoArgs("prettyprint-Haskell-start-symbols",Fail)]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Stmt"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Fbind"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Stmt"))),BA(Match(NoAnnoList(Str("\"Stmt\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Fbind"))),BA(Match(NoAnnoList(Str("\"Fbind\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-Stmt",Rule(NoAnnoList(Op("BindStmt",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Pat"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"<-\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Exp"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-Stmt",Match(NoAnnoList(Op("BindStmt",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BindStmt",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Stmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BindStmt",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Stmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BindStmt",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Stmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Stmt",Rule(NoAnnoList(Op("ExpStmt",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Exp"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Stmt",Match(NoAnnoList(Op("ExpStmt",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ExpStmt",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Stmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ExpStmt",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Stmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ExpStmt",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Stmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Stmt",Rule(NoAnnoList(Op("LetStmt",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"let\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Declbinds"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Stmt",Match(NoAnnoList(Op("LetStmt",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("LetStmt",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Stmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("LetStmt",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Stmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("LetStmt",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Stmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Fbind",Rule(NoAnnoList(Op("FBind",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Qvar"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"=\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Exp"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-Fbind",Match(NoAnnoList(Op("FBind",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("FBind",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Fbind\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("FBind",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Fbind\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("FBind",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Fbind\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-Stmt",Fail),SDefNoArgs("is-Haskell-Fbind",Fail),RDefNoArgs("prettyprint-Haskell-Stmt",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Stmt")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Fbind",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Fbind")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Pat",RuleNoCond(NoAnnoList(Op("Pat-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Pat\""))]))]))]))])))),SDefNoArgs("is-Haskell-Pat",Match(NoAnnoList(Op("Pat-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Stmt",RuleNoCond(NoAnnoList(Op("Stmt-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Stmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-Stmt",Match(NoAnnoList(Op("Stmt-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Declbinds",RuleNoCond(NoAnnoList(Op("Declbinds-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Declbinds\""))]))]))]))])))),SDefNoArgs("is-Haskell-Declbinds",Match(NoAnnoList(Op("Declbinds-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Fbind",RuleNoCond(NoAnnoList(Op("Fbind-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Fbind\""))]))]))]))])))),SDefNoArgs("is-Haskell-Fbind",Match(NoAnnoList(Op("Fbind-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Qvar",RuleNoCond(NoAnnoList(Op("Qvar-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvar\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvar",Match(NoAnnoList(Op("Qvar-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Exp",RuleNoCond(NoAnnoList(Op("Exp-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Exp\""))]))]))]))])))),SDefNoArgs("is-Haskell-Exp",Match(NoAnnoList(Op("Exp-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Pat",RuleNoCond(NoAnnoList(Op("Pat-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Pat\""))]))]))]))])))),SDefNoArgs("is-Haskell-Pat",Match(NoAnnoList(Op("Pat-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Stmt",RuleNoCond(NoAnnoList(Op("Stmt-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Stmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-Stmt",Match(NoAnnoList(Op("Stmt-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Declbinds",RuleNoCond(NoAnnoList(Op("Declbinds-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Declbinds\""))]))]))]))])))),SDefNoArgs("is-Haskell-Declbinds",Match(NoAnnoList(Op("Declbinds-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Fbind",RuleNoCond(NoAnnoList(Op("Fbind-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Fbind\""))]))]))]))])))),SDefNoArgs("is-Haskell-Fbind",Match(NoAnnoList(Op("Fbind-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Qvar",RuleNoCond(NoAnnoList(Op("Qvar-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Qvar\""))]))]))]))])))),SDefNoArgs("is-Haskell-Qvar",Match(NoAnnoList(Op("Qvar-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Exp",RuleNoCond(NoAnnoList(Op("Exp-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Exp\""))]))]))]))])))),SDefNoArgs("is-Haskell-Exp",Match(NoAnnoList(Op("Exp-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-StmtList"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtBlock"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmt"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-StmtList"))),BA(Match(NoAnnoList(Str("\"StmtList\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtBlock"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmtBlock\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmt"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmt\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-StmtList",Rule(NoAnnoList(Op("StmtList",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtBlock"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-StmtList",Match(NoAnnoList(Op("StmtList",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtList",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"StmtList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtList",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"StmtList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtList",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"StmtList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-StmtList",Rule(NoAnnoList(Op("StmtListOffside",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-V-list"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideStmt"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Align",[NoAnnoList(Op("PosRef",[NoAnnoList(Int("1"))]))]))]))])),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-StmtList",Match(NoAnnoList(Op("StmtListOffside",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtListOffside",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"StmtList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtListOffside",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"StmtList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\\n\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtListOffside",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"StmtList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtBlock",Rule(NoAnnoList(Op("StmtBlock",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"{\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtListSem"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"}\""))]))])))))])),SDefNoArgs("is-Haskell-NoOffsideStmtBlock",Match(NoAnnoList(Op("StmtBlock",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtBlock",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmtBlock\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtBlock",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmtBlock\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtBlock",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmtBlock\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideStmt",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideStmt")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Stmt"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideStmt",Rule(NoAnnoList(Op("NoOffsideSemi",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmt"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))])))))])),SDefNoArgs("is-Haskell-NoOffsideStmt",Match(NoAnnoList(Op("NoOffsideSemi",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NoOffsideSemi",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NoOffsideSemi",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NoOffsideSemi",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-StmtList",Fail),SDefNoArgs("is-Haskell-NoOffsideStmtBlock",Fail),SDefNoArgs("is-Haskell-NoOffsideStmt",Fail),RDefNoArgs("prettyprint-Haskell-StmtList",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-StmtList")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtBlock",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtBlock")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmt",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmt")),Var("h")))),RDefNoArgs("prettyprint-Haskell-StmtList",RuleNoCond(NoAnnoList(Op("StmtList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$StmtList\""))]))]))]))])))),SDefNoArgs("is-Haskell-StmtList",Match(NoAnnoList(Op("StmtList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideStmt",RuleNoCond(NoAnnoList(Op("OffsideStmt-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideStmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideStmt",Match(NoAnnoList(Op("OffsideStmt-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtBlock",RuleNoCond(NoAnnoList(Op("NoOffsideStmtBlock-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmtBlock\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmtBlock",Match(NoAnnoList(Op("NoOffsideStmtBlock-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtListSem",RuleNoCond(NoAnnoList(Op("NoOffsideStmtListSem-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmtListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmtListSem",Match(NoAnnoList(Op("NoOffsideStmtListSem-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Stmt",RuleNoCond(NoAnnoList(Op("Stmt-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Stmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-Stmt",Match(NoAnnoList(Op("Stmt-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmt",RuleNoCond(NoAnnoList(Op("NoOffsideStmt-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmt",Match(NoAnnoList(Op("NoOffsideStmt-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-StmtList",RuleNoCond(NoAnnoList(Op("StmtList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$StmtList\""))]))]))]))])))),SDefNoArgs("is-Haskell-StmtList",Match(NoAnnoList(Op("StmtList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideStmt",RuleNoCond(NoAnnoList(Op("OffsideStmt-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideStmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideStmt",Match(NoAnnoList(Op("OffsideStmt-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtBlock",RuleNoCond(NoAnnoList(Op("NoOffsideStmtBlock-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmtBlock\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmtBlock",Match(NoAnnoList(Op("NoOffsideStmtBlock-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtListSem",RuleNoCond(NoAnnoList(Op("NoOffsideStmtListSem-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmtListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmtListSem",Match(NoAnnoList(Op("NoOffsideStmtListSem-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Stmt",RuleNoCond(NoAnnoList(Op("Stmt-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Stmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-Stmt",Match(NoAnnoList(Op("Stmt-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmt",RuleNoCond(NoAnnoList(Op("NoOffsideStmt-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmt",Match(NoAnnoList(Op("NoOffsideStmt-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtList"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtListSem"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-OffsideStmt"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtList"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmtList\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtListSem"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmtListSem\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-OffsideStmt"))),BA(Match(NoAnnoList(Str("\"OffsideStmt\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtList",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideStmtList")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(CallT(SVar("pp-H-list"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmt"))],[NoAnnoList(Str("\";\""))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtListSem",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideStmtListSem")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtListSem",Rule(NoAnnoList(Op("SemiBefore",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtListSem"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-NoOffsideStmtListSem",Match(NoAnnoList(Op("SemiBefore",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmtListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmtListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideStmtListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideStmt",Rule(Var("stmt__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("stmt__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-OffsideStmt")))),WhereClause(Assign(Var("stmt__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Stmt"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Offside",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt\""))])),NoAnnoList(List([]))]))]))])),Var("stmt__"))])))))])),RDefNoArgs("prettyprint-Haskell-OffsideStmt",Rule(NoAnnoList(Op("SemiAfter",[Var("stmt__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt\""))])),NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("stmt__'")]))]))),[WithClause(Assign(Var("stmt__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideStmt"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt\""))]))]))])),Var("stmt__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))])))])))))])),SDefNoArgs("is-Haskell-OffsideStmt",Match(NoAnnoList(Op("SemiAfter",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("stmt__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("stmt__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("stmt__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideStmt",Rule(NoAnnoList(Op("SemiBefore",[Var("stmt__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))])),NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("stmt__'")]))]))),[WithClause(Assign(Var("stmt__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideStmt"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt\""))]))]))])),Var("stmt__"))])))))])),SDefNoArgs("is-Haskell-OffsideStmt",Match(NoAnnoList(Op("SemiBefore",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("stmt__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("stmt__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("stmt__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideStmt",Rule(NoAnnoList(Op("StmtSeq",[Var("stmt1__"),Var("stmt2__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt1\""))])),NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))])),NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt1\""))])),NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt2\""))]))]))])),NoAnnoList(Op("Offside",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt1\""))])),NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt2\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("stmt1__'")]))]))),[WithClause(Assign(Var("stmt1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideStmt"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt1\""))]))]))])),Var("stmt1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Stmt"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"stmt2\""))]))]))])),Var("stmt2__"))])))))])),SDefNoArgs("is-Haskell-OffsideStmt",Match(NoAnnoList(Op("StmtSeq",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtSeq",[Var("stmt1__"),Var("stmt2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtSeq",[Var("stmt1__"),Var("stmt2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("StmtSeq",[Var("stmt1__"),Var("stmt2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideStmt\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-NoOffsideStmtList",Fail),SDefNoArgs("is-Haskell-NoOffsideStmtListSem",Fail),SDefNoArgs("is-Haskell-OffsideStmt",Fail),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtList",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtList")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtListSem",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideStmtListSem")),Var("h")))),RDefNoArgs("prettyprint-Haskell-OffsideStmt",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-OffsideStmt")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmt",RuleNoCond(NoAnnoList(Op("NoOffsideStmt-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmt",Match(NoAnnoList(Op("NoOffsideStmt-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtList",RuleNoCond(NoAnnoList(Op("NoOffsideStmtList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmtList\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmtList",Match(NoAnnoList(Op("NoOffsideStmtList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtListSem",RuleNoCond(NoAnnoList(Op("NoOffsideStmtListSem-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmtListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmtListSem",Match(NoAnnoList(Op("NoOffsideStmtListSem-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideStmt",RuleNoCond(NoAnnoList(Op("OffsideStmt-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideStmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideStmt",Match(NoAnnoList(Op("OffsideStmt-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Stmt",RuleNoCond(NoAnnoList(Op("Stmt-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Stmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-Stmt",Match(NoAnnoList(Op("Stmt-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmt",RuleNoCond(NoAnnoList(Op("NoOffsideStmt-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmt",Match(NoAnnoList(Op("NoOffsideStmt-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtList",RuleNoCond(NoAnnoList(Op("NoOffsideStmtList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmtList\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmtList",Match(NoAnnoList(Op("NoOffsideStmtList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideStmtListSem",RuleNoCond(NoAnnoList(Op("NoOffsideStmtListSem-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideStmtListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideStmtListSem",Match(NoAnnoList(Op("NoOffsideStmtListSem-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideStmt",RuleNoCond(NoAnnoList(Op("OffsideStmt-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideStmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideStmt",Match(NoAnnoList(Op("OffsideStmt-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Stmt",RuleNoCond(NoAnnoList(Op("Stmt-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Stmt\""))]))]))]))])))),SDefNoArgs("is-Haskell-Stmt",Match(NoAnnoList(Op("Stmt-Plhdr",[Wld]))))])])