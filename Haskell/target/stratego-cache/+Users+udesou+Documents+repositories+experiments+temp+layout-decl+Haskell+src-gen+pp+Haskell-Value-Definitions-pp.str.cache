Module("pp/Haskell-Value-Definitions-pp",[Imports([Import("libstratego-gpp"),Import("libspoofax/sdf/pp"),Import("libspoofax/term/origin"),Import("libspoofax/term/annotation"),Import("libstratego-sglr"),Import("libstratego-sglr"),Import("signatures/Haskell-Value-Definitions-sig")]),Imports([Import("signatures/Haskell-Patterns-sig"),Import("signatures/Haskell-Expressions-sig"),Import("signatures/Haskell-Identifier-Sorts-sig"),Import("signatures/Haskell-Modules-sig")]),Imports([Import("pp/Haskell-Patterns-pp"),Import("pp/Haskell-Expressions-pp"),Import("pp/Haskell-Identifier-Sorts-pp"),Import("pp/Haskell-Modules-pp")]),Strategies([SDefNoArgs("prettyprint-example",CallNoArgs(SVar("prettyprint-Haskell"))),SDefNoArgs("prettyprint-Haskell",Fail),SDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Fail)]),Strategies([SDefNoArgs("prettyprint-SDF-start-symbols",CallNoArgs(SVar("prettyprint-Haskell-start-symbols"))),SDefNoArgs("prettyprint-Haskell-start-symbols",Fail)]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Decl"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Valdef"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Gdrh"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-FunLHS"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Decl"))),BA(Match(NoAnnoList(Str("\"Decl\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Valdef"))),BA(Match(NoAnnoList(Str("\"Valdef\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Gdrh"))),BA(Match(NoAnnoList(Str("\"Gdrh\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-FunLHS"))),BA(Match(NoAnnoList(Str("\"FunLHS\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-Decl",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Decl")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Valdef"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Valdef",Rule(NoAnnoList(Op("Valdef",[Var("t1__"),Var("t2__"),Var("t3__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-FunLHS"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"=\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Exp"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-MaybeWhere"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t3__"))])))))])),SDefNoArgs("is-Haskell-Valdef",Match(NoAnnoList(Op("Valdef",[Wld,Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Valdef",[Var("t1__"),Var("t2__"),Var("t3__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Valdef\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Valdef",[Var("t1__"),Var("t2__"),Var("t3__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Valdef\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Valdef",[Var("t1__"),Var("t2__"),Var("t3__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Valdef\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Valdef",Rule(NoAnnoList(Op("GdValdef",[Var("t1__"),Var("t2__"),Var("t3__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-FunLHS"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-H-list"),[CallNoArgs(SVar("prettyprint-Haskell-Gdrh"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-MaybeWhere"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t3__"))])))))])),SDefNoArgs("is-Haskell-Valdef",Match(NoAnnoList(Op("GdValdef",[Wld,Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("GdValdef",[Var("t1__"),Var("t2__"),Var("t3__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Valdef\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("GdValdef",[Var("t1__"),Var("t2__"),Var("t3__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Valdef\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("GdValdef",[Var("t1__"),Var("t2__"),Var("t3__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Valdef\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Gdrh",Rule(NoAnnoList(Op("Guarded",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"|\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Exp"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"=\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Exp"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-Gdrh",Match(NoAnnoList(Op("Guarded",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Guarded",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gdrh\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Guarded",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gdrh\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Guarded",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Gdrh\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-FunLHS",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-FunLHS")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Pat"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-FunLHS",Rule(NoAnnoList(Op("VarFunLHS",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Var"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-H-list"),[CallNoArgs(SVar("prettyprint-Haskell-APat"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-FunLHS",Match(NoAnnoList(Op("VarFunLHS",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("VarFunLHS",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"FunLHS\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("VarFunLHS",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"FunLHS\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("VarFunLHS",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"FunLHS\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-FunLHS",Rule(NoAnnoList(Op("OpFunLHS",[Var("t1__"),Var("t2__"),Var("t3__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Pat"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Varop"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Pat"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t3__"))])))))])),SDefNoArgs("is-Haskell-FunLHS",Match(NoAnnoList(Op("OpFunLHS",[Wld,Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("OpFunLHS",[Var("t1__"),Var("t2__"),Var("t3__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"FunLHS\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("OpFunLHS",[Var("t1__"),Var("t2__"),Var("t3__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"FunLHS\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("OpFunLHS",[Var("t1__"),Var("t2__"),Var("t3__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"FunLHS\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-FunLHS",Rule(NoAnnoList(Op("NestedFunLHS",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"(\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-FunLHS"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\")\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-H-list"),[CallNoArgs(SVar("prettyprint-Haskell-APat"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-FunLHS",Match(NoAnnoList(Op("NestedFunLHS",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NestedFunLHS",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"FunLHS\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NestedFunLHS",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"FunLHS\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NestedFunLHS",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"FunLHS\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-Decl",Fail),SDefNoArgs("is-Haskell-Valdef",Fail),SDefNoArgs("is-Haskell-Gdrh",Fail),SDefNoArgs("is-Haskell-FunLHS",Fail),RDefNoArgs("prettyprint-Haskell-Decl",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Decl")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Valdef",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Valdef")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Gdrh",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Gdrh")),Var("h")))),RDefNoArgs("prettyprint-Haskell-FunLHS",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-FunLHS")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Decl",RuleNoCond(NoAnnoList(Op("Decl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Decl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Decl",Match(NoAnnoList(Op("Decl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Valdef",RuleNoCond(NoAnnoList(Op("Valdef-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Valdef\""))]))]))]))])))),SDefNoArgs("is-Haskell-Valdef",Match(NoAnnoList(Op("Valdef-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-MaybeWhere",RuleNoCond(NoAnnoList(Op("MaybeWhere-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$MaybeWhere\""))]))]))]))])))),SDefNoArgs("is-Haskell-MaybeWhere",Match(NoAnnoList(Op("MaybeWhere-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Gdrh",RuleNoCond(NoAnnoList(Op("Gdrh-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Gdrh\""))]))]))]))])))),SDefNoArgs("is-Haskell-Gdrh",Match(NoAnnoList(Op("Gdrh-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Exp",RuleNoCond(NoAnnoList(Op("Exp-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Exp\""))]))]))]))])))),SDefNoArgs("is-Haskell-Exp",Match(NoAnnoList(Op("Exp-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Var",RuleNoCond(NoAnnoList(Op("Var-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Var\""))]))]))]))])))),SDefNoArgs("is-Haskell-Var",Match(NoAnnoList(Op("Var-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Varop",RuleNoCond(NoAnnoList(Op("Varop-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Varop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Varop",Match(NoAnnoList(Op("Varop-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Pat",RuleNoCond(NoAnnoList(Op("Pat-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Pat\""))]))]))]))])))),SDefNoArgs("is-Haskell-Pat",Match(NoAnnoList(Op("Pat-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-FunLHS",RuleNoCond(NoAnnoList(Op("FunLHS-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$FunLHS\""))]))]))]))])))),SDefNoArgs("is-Haskell-FunLHS",Match(NoAnnoList(Op("FunLHS-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-APat",RuleNoCond(NoAnnoList(Op("APat-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$APat\""))]))]))]))])))),SDefNoArgs("is-Haskell-APat",Match(NoAnnoList(Op("APat-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Decl",RuleNoCond(NoAnnoList(Op("Decl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Decl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Decl",Match(NoAnnoList(Op("Decl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Valdef",RuleNoCond(NoAnnoList(Op("Valdef-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Valdef\""))]))]))]))])))),SDefNoArgs("is-Haskell-Valdef",Match(NoAnnoList(Op("Valdef-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-MaybeWhere",RuleNoCond(NoAnnoList(Op("MaybeWhere-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$MaybeWhere\""))]))]))]))])))),SDefNoArgs("is-Haskell-MaybeWhere",Match(NoAnnoList(Op("MaybeWhere-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Gdrh",RuleNoCond(NoAnnoList(Op("Gdrh-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Gdrh\""))]))]))]))])))),SDefNoArgs("is-Haskell-Gdrh",Match(NoAnnoList(Op("Gdrh-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Exp",RuleNoCond(NoAnnoList(Op("Exp-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Exp\""))]))]))]))])))),SDefNoArgs("is-Haskell-Exp",Match(NoAnnoList(Op("Exp-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Var",RuleNoCond(NoAnnoList(Op("Var-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Var\""))]))]))]))])))),SDefNoArgs("is-Haskell-Var",Match(NoAnnoList(Op("Var-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Varop",RuleNoCond(NoAnnoList(Op("Varop-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Varop\""))]))]))]))])))),SDefNoArgs("is-Haskell-Varop",Match(NoAnnoList(Op("Varop-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Pat",RuleNoCond(NoAnnoList(Op("Pat-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Pat\""))]))]))]))])))),SDefNoArgs("is-Haskell-Pat",Match(NoAnnoList(Op("Pat-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-FunLHS",RuleNoCond(NoAnnoList(Op("FunLHS-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$FunLHS\""))]))]))]))])))),SDefNoArgs("is-Haskell-FunLHS",Match(NoAnnoList(Op("FunLHS-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-APat",RuleNoCond(NoAnnoList(Op("APat-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$APat\""))]))]))]))])))),SDefNoArgs("is-Haskell-APat",Match(NoAnnoList(Op("APat-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Where"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-MaybeWhere"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Declbinds"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Where"))),BA(Match(NoAnnoList(Str("\"Where\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-MaybeWhere"))),BA(Match(NoAnnoList(Str("\"MaybeWhere\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Declbinds"))),BA(Match(NoAnnoList(Str("\"Declbinds\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-Where",Rule(NoAnnoList(Op("Where",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"where\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-DeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Where",Match(NoAnnoList(Op("Where",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Where",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Where\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Where",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Where\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Where",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Where\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-MaybeWhere",RuleNoCond(NoAnnoList(Tuple([])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"\""))]))]))]))])))),RDefNoArgs("prettyprint-Haskell-MaybeWhere",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-MaybeWhere")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Where"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Declbinds",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Declbinds")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-DeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Where",Fail),SDefNoArgs("is-Haskell-MaybeWhere",Fail),SDefNoArgs("is-Haskell-Declbinds",Fail),RDefNoArgs("prettyprint-Haskell-Where",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Where")),Var("h")))),RDefNoArgs("prettyprint-Haskell-MaybeWhere",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-MaybeWhere")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Declbinds",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Declbinds")),Var("h")))),RDefNoArgs("prettyprint-Haskell-MaybeWhere",RuleNoCond(NoAnnoList(Op("MaybeWhere-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$MaybeWhere\""))]))]))]))])))),SDefNoArgs("is-Haskell-MaybeWhere",Match(NoAnnoList(Op("MaybeWhere-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Where",RuleNoCond(NoAnnoList(Op("Where-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Where\""))]))]))]))])))),SDefNoArgs("is-Haskell-Where",Match(NoAnnoList(Op("Where-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Declbinds",RuleNoCond(NoAnnoList(Op("Declbinds-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Declbinds\""))]))]))]))])))),SDefNoArgs("is-Haskell-Declbinds",Match(NoAnnoList(Op("Declbinds-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-DeclList",RuleNoCond(NoAnnoList(Op("DeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$DeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-DeclList",Match(NoAnnoList(Op("DeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-MaybeWhere",RuleNoCond(NoAnnoList(Op("MaybeWhere-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$MaybeWhere\""))]))]))]))])))),SDefNoArgs("is-Haskell-MaybeWhere",Match(NoAnnoList(Op("MaybeWhere-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Where",RuleNoCond(NoAnnoList(Op("Where-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Where\""))]))]))]))])))),SDefNoArgs("is-Haskell-Where",Match(NoAnnoList(Op("Where-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Declbinds",RuleNoCond(NoAnnoList(Op("Declbinds-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Declbinds\""))]))]))]))])))),SDefNoArgs("is-Haskell-Declbinds",Match(NoAnnoList(Op("Declbinds-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-DeclList",RuleNoCond(NoAnnoList(Op("DeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$DeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-DeclList",Match(NoAnnoList(Op("DeclList-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-DeclList"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-OffsideDeclListOrEmpty"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclBlock"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclListSemOrEmpty"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDecl"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-DeclList"))),BA(Match(NoAnnoList(Str("\"DeclList\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-OffsideDeclListOrEmpty"))),BA(Match(NoAnnoList(Str("\"OffsideDeclListOrEmpty\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclBlock"))),BA(Match(NoAnnoList(Str("\"NoOffsideDeclBlock\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclListSemOrEmpty"))),BA(Match(NoAnnoList(Str("\"NoOffsideDeclListSemOrEmpty\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDecl"))),BA(Match(NoAnnoList(Str("\"NoOffsideDecl\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-DeclList",Rule(NoAnnoList(Op("DeclList",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclBlock"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-DeclList",Match(NoAnnoList(Op("DeclList",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("DeclList",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"DeclList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("DeclList",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"DeclList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("DeclList",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"DeclList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-DeclList",Rule(NoAnnoList(Op("DeclListOffside",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideDeclListOrEmpty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-DeclList",Match(NoAnnoList(Op("DeclListOffside",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("DeclListOffside",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"DeclList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("DeclListOffside",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"DeclList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("DeclListOffside",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"DeclList\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideDeclListOrEmpty",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-OffsideDeclListOrEmpty")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideDeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-OffsideDeclListOrEmpty",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-OffsideDeclListOrEmpty")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Empty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclBlock",Rule(NoAnnoList(Op("NoOffsideDeclBlock",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"{\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclListSemOrEmpty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"}\""))]))])))))])),SDefNoArgs("is-Haskell-NoOffsideDeclBlock",Match(NoAnnoList(Op("NoOffsideDeclBlock",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NoOffsideDeclBlock",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideDeclBlock\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NoOffsideDeclBlock",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideDeclBlock\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NoOffsideDeclBlock",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideDeclBlock\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSemOrEmpty",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideDeclListSemOrEmpty")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclListSem"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSemOrEmpty",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideDeclListSemOrEmpty")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Empty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideDecl",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideDecl")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Decl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideDecl",Rule(NoAnnoList(Op("SemiAfter",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))])))))])),SDefNoArgs("is-Haskell-NoOffsideDecl",Match(NoAnnoList(Op("SemiAfter",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-DeclList",Fail),SDefNoArgs("is-Haskell-OffsideDeclListOrEmpty",Fail),SDefNoArgs("is-Haskell-NoOffsideDeclBlock",Fail),SDefNoArgs("is-Haskell-NoOffsideDeclListSemOrEmpty",Fail),SDefNoArgs("is-Haskell-NoOffsideDecl",Fail),RDefNoArgs("prettyprint-Haskell-DeclList",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-DeclList")),Var("h")))),RDefNoArgs("prettyprint-Haskell-OffsideDeclListOrEmpty",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-OffsideDeclListOrEmpty")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclBlock",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclBlock")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSemOrEmpty",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclListSemOrEmpty")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideDecl",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDecl")),Var("h")))),RDefNoArgs("prettyprint-Haskell-DeclList",RuleNoCond(NoAnnoList(Op("DeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$DeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-DeclList",Match(NoAnnoList(Op("DeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideDeclList",RuleNoCond(NoAnnoList(Op("OffsideDeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideDeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideDeclList",Match(NoAnnoList(Op("OffsideDeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideDeclListOrEmpty",RuleNoCond(NoAnnoList(Op("OffsideDeclListOrEmpty-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideDeclListOrEmpty\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideDeclListOrEmpty",Match(NoAnnoList(Op("OffsideDeclListOrEmpty-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclBlock",RuleNoCond(NoAnnoList(Op("NoOffsideDeclBlock-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDeclBlock\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDeclBlock",Match(NoAnnoList(Op("NoOffsideDeclBlock-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideDeclListSem-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDeclListSem",Match(NoAnnoList(Op("NoOffsideDeclListSem-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSemOrEmpty",RuleNoCond(NoAnnoList(Op("NoOffsideDeclListSemOrEmpty-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDeclListSemOrEmpty\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDeclListSemOrEmpty",Match(NoAnnoList(Op("NoOffsideDeclListSemOrEmpty-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Empty",RuleNoCond(NoAnnoList(Op("Empty-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Empty\""))]))]))]))])))),SDefNoArgs("is-Haskell-Empty",Match(NoAnnoList(Op("Empty-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Decl",RuleNoCond(NoAnnoList(Op("Decl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Decl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Decl",Match(NoAnnoList(Op("Decl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDecl",RuleNoCond(NoAnnoList(Op("NoOffsideDecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDecl",Match(NoAnnoList(Op("NoOffsideDecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-DeclList",RuleNoCond(NoAnnoList(Op("DeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$DeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-DeclList",Match(NoAnnoList(Op("DeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideDeclList",RuleNoCond(NoAnnoList(Op("OffsideDeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideDeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideDeclList",Match(NoAnnoList(Op("OffsideDeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideDeclListOrEmpty",RuleNoCond(NoAnnoList(Op("OffsideDeclListOrEmpty-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideDeclListOrEmpty\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideDeclListOrEmpty",Match(NoAnnoList(Op("OffsideDeclListOrEmpty-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclBlock",RuleNoCond(NoAnnoList(Op("NoOffsideDeclBlock-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDeclBlock\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDeclBlock",Match(NoAnnoList(Op("NoOffsideDeclBlock-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideDeclListSem-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDeclListSem",Match(NoAnnoList(Op("NoOffsideDeclListSem-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSemOrEmpty",RuleNoCond(NoAnnoList(Op("NoOffsideDeclListSemOrEmpty-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDeclListSemOrEmpty\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDeclListSemOrEmpty",Match(NoAnnoList(Op("NoOffsideDeclListSemOrEmpty-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Empty",RuleNoCond(NoAnnoList(Op("Empty-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Empty\""))]))]))]))])))),SDefNoArgs("is-Haskell-Empty",Match(NoAnnoList(Op("Empty-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Decl",RuleNoCond(NoAnnoList(Op("Decl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Decl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Decl",Match(NoAnnoList(Op("Decl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDecl",RuleNoCond(NoAnnoList(Op("NoOffsideDecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDecl",Match(NoAnnoList(Op("NoOffsideDecl-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclList"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclListSem"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-OffsideDecl"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclList"))),BA(Match(NoAnnoList(Str("\"NoOffsideDeclList\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclListSem"))),BA(Match(NoAnnoList(Str("\"NoOffsideDeclListSem\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-OffsideDecl"))),BA(Match(NoAnnoList(Str("\"OffsideDecl\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclList",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideDeclList")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(CallT(SVar("pp-H-list"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDecl"))],[NoAnnoList(Str("\";\""))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSem",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideDeclListSem")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSem",Rule(NoAnnoList(Op("SemiBefore",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclListSem"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-NoOffsideDeclListSem",Match(NoAnnoList(Op("SemiBefore",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideDeclListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideDeclListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideDeclListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideDecl",Rule(Var("decl__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("decl__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-OffsideDecl")))),WhereClause(Assign(Var("decl__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Decl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Offside",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl\""))])),NoAnnoList(List([]))]))]))])),Var("decl__"))])))))])),RDefNoArgs("prettyprint-Haskell-OffsideDecl",Rule(NoAnnoList(Op("SemiAfter",[Var("decl__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl\""))])),NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("decl__'")]))]))),[WithClause(Assign(Var("decl__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideDecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl\""))]))]))])),Var("decl__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))])))])))))])),SDefNoArgs("is-Haskell-OffsideDecl",Match(NoAnnoList(Op("SemiAfter",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("decl__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("decl__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("decl__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideDecl",Rule(NoAnnoList(Op("SemiBefore",[Var("decl__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))])),NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("decl__'")]))]))),[WithClause(Assign(Var("decl__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideDecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl\""))]))]))])),Var("decl__"))])))))])),SDefNoArgs("is-Haskell-OffsideDecl",Match(NoAnnoList(Op("SemiBefore",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("decl__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("decl__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("decl__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideDecl",Rule(NoAnnoList(Op("DeclSeq",[Var("decl1__"),Var("decl2__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl1\""))])),NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))])),NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl2\""))]))]))])),NoAnnoList(Op("Offside",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl1\""))])),NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl2\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("decl1__'")]))]))),[WithClause(Assign(Var("decl1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideDecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl1\""))]))]))])),Var("decl1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Decl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"decl2\""))]))]))])),Var("decl2__"))])))))])),SDefNoArgs("is-Haskell-OffsideDecl",Match(NoAnnoList(Op("DeclSeq",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("DeclSeq",[Var("decl1__"),Var("decl2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("DeclSeq",[Var("decl1__"),Var("decl2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("DeclSeq",[Var("decl1__"),Var("decl2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideDecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-NoOffsideDeclList",Fail),SDefNoArgs("is-Haskell-NoOffsideDeclListSem",Fail),SDefNoArgs("is-Haskell-OffsideDecl",Fail),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclList",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclList")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSem",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideDeclListSem")),Var("h")))),RDefNoArgs("prettyprint-Haskell-OffsideDecl",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-OffsideDecl")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideDecl",RuleNoCond(NoAnnoList(Op("NoOffsideDecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDecl",Match(NoAnnoList(Op("NoOffsideDecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclList",RuleNoCond(NoAnnoList(Op("NoOffsideDeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDeclList",Match(NoAnnoList(Op("NoOffsideDeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideDeclListSem-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDeclListSem",Match(NoAnnoList(Op("NoOffsideDeclListSem-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideDecl",RuleNoCond(NoAnnoList(Op("OffsideDecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideDecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideDecl",Match(NoAnnoList(Op("OffsideDecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Decl",RuleNoCond(NoAnnoList(Op("Decl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Decl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Decl",Match(NoAnnoList(Op("Decl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDecl",RuleNoCond(NoAnnoList(Op("NoOffsideDecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDecl",Match(NoAnnoList(Op("NoOffsideDecl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclList",RuleNoCond(NoAnnoList(Op("NoOffsideDeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDeclList",Match(NoAnnoList(Op("NoOffsideDeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideDeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideDeclListSem-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideDeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideDeclListSem",Match(NoAnnoList(Op("NoOffsideDeclListSem-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideDecl",RuleNoCond(NoAnnoList(Op("OffsideDecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideDecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideDecl",Match(NoAnnoList(Op("OffsideDecl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Decl",RuleNoCond(NoAnnoList(Op("Decl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Decl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Decl",Match(NoAnnoList(Op("Decl-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-OffsideDeclList"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-OffsideDeclList"))),BA(Match(NoAnnoList(Str("\"OffsideDeclList\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-OffsideDeclList",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-OffsideDeclList")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-V-list"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideDecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Align",[NoAnnoList(Op("PosRef",[NoAnnoList(Int("1"))]))]))]))])),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-OffsideDeclList",Fail),RDefNoArgs("prettyprint-Haskell-OffsideDeclList",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-OffsideDeclList")),Var("h")))),RDefNoArgs("prettyprint-Haskell-OffsideDeclList",RuleNoCond(NoAnnoList(Op("OffsideDeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideDeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideDeclList",Match(NoAnnoList(Op("OffsideDeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideDecl",RuleNoCond(NoAnnoList(Op("OffsideDecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideDecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideDecl",Match(NoAnnoList(Op("OffsideDecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideDeclList",RuleNoCond(NoAnnoList(Op("OffsideDeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideDeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideDeclList",Match(NoAnnoList(Op("OffsideDeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideDecl",RuleNoCond(NoAnnoList(Op("OffsideDecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideDecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideDecl",Match(NoAnnoList(Op("OffsideDecl-Plhdr",[Wld]))))])])