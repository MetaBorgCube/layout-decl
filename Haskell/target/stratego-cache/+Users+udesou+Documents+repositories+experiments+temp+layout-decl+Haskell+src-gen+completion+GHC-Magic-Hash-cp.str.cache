Module("completion/GHC-Magic-Hash-cp",[Imports([Import("libstratego-gpp"),ImportWildcard("libspoofax/editor/completion")]),Imports([Import("signatures/GHC-Magic-Hash-sig")]),Imports([Import("completion/Haskell-Identifiers-cp"),Import("completion/Haskell-Numbers-cp"),Import("completion/Haskell-Strings-cp")]),Rules([RDefT("suggest-completions",[],[DefaultVarDec("completions")],RuleNoCond(NoAnnoList(Op("Literal-Plhdr",[])),App(Seq(CallT(SVar("add-completions"),[],[NoAnnoList(Tuple([NoAnnoList(Str("\"CharHash\"")),NoAnnoList(Op("CharHash",[App(Call(SVar("try"),[CallT(SVar("inline-completions"),[],[NoAnnoList(Op("Literal-Plhdr",[]))])]),NoAnnoList(Op("Char-HASH-Plhdr",[])))]))]))]),Fail),Var("completions")))),RDefT("suggest-completions",[],[DefaultVarDec("completions")],RuleNoCond(NoAnnoList(Op("Literal-Plhdr",[])),App(Seq(CallT(SVar("add-completions"),[],[NoAnnoList(Tuple([NoAnnoList(Str("\"StringHash\"")),NoAnnoList(Op("StringHash",[App(Call(SVar("try"),[CallT(SVar("inline-completions"),[],[NoAnnoList(Op("Literal-Plhdr",[]))])]),NoAnnoList(Op("String-HASH-Plhdr",[])))]))]))]),Fail),Var("completions")))),RDefT("suggest-completions",[],[DefaultVarDec("completions")],RuleNoCond(NoAnnoList(Op("Literal-Plhdr",[])),App(Seq(CallT(SVar("add-completions"),[],[NoAnnoList(Tuple([NoAnnoList(Str("\"IntegerHash\"")),NoAnnoList(Op("IntegerHash",[App(Call(SVar("try"),[CallT(SVar("inline-completions"),[],[NoAnnoList(Op("Literal-Plhdr",[]))])]),NoAnnoList(Op("Integer-HASH-Plhdr",[])))]))]))]),Fail),Var("completions")))),RDefT("suggest-completions",[],[DefaultVarDec("completions")],RuleNoCond(NoAnnoList(Op("Literal-Plhdr",[])),App(Seq(CallT(SVar("add-completions"),[],[NoAnnoList(Tuple([NoAnnoList(Str("\"FloatHash\"")),NoAnnoList(Op("FloatHash",[App(Call(SVar("try"),[CallT(SVar("inline-completions"),[],[NoAnnoList(Op("Literal-Plhdr",[]))])]),NoAnnoList(Op("Float-HASH-Plhdr",[])))]))]))]),Fail),Var("completions"))))]),Rules([RDefNoArgs("is-lexical-completion-sort",RuleNoCond(NoAnnoList(Str("\"VARID\"")),RootApp(Id))),RDefNoArgs("is-lexical-completion-sort",RuleNoCond(NoAnnoList(Str("\"CONID\"")),RootApp(Id))),RDefNoArgs("is-lexical-completion-sort",RuleNoCond(NoAnnoList(Str("\"INTEGER-HASH\"")),RootApp(Id))),RDefNoArgs("is-lexical-completion-sort",RuleNoCond(NoAnnoList(Str("\"FLOAT-HASH\"")),RootApp(Id))),RDefNoArgs("is-lexical-completion-sort",RuleNoCond(NoAnnoList(Str("\"RATIONAL-HASH\"")),RootApp(Id))),RDefNoArgs("is-lexical-completion-sort",RuleNoCond(NoAnnoList(Str("\"Char-HASH\"")),RootApp(Id))),RDefNoArgs("is-lexical-completion-sort",RuleNoCond(NoAnnoList(Str("\"String-HASH\"")),RootApp(Id))),RDefNoArgs("is-lexical-completion-sort",RuleNoCond(NoAnnoList(Str("\"Integer-HASH\"")),RootApp(Id))),RDefNoArgs("is-lexical-completion-sort",RuleNoCond(NoAnnoList(Str("\"Float-HASH\"")),RootApp(Id))),RDefNoArgs("is-left-recursive",Rule(NoAnnoList(Str("\"Char-HASH\"")),App(CallNoArgs(SVar("is-left-recursive")),NoAnnoList(Str("\"Literal\""))),BA(Not(CallNoArgs(SVar("is-lexical-completion-sort"))),NoAnnoList(Str("\"Char-HASH\""))))),RDefNoArgs("is-right-recursive",Rule(NoAnnoList(Str("\"Char-HASH\"")),App(CallNoArgs(SVar("is-right-recursive")),NoAnnoList(Str("\"Literal\""))),BA(Not(CallNoArgs(SVar("is-lexical-completion-sort"))),NoAnnoList(Str("\"Char-HASH\""))))),RDefNoArgs("is-Literal-completion-sort",RuleNoCond(NoAnnoList(Str("\"Char-HASH\"")),RootApp(Id))),RDefNoArgs("is-left-recursive",Rule(NoAnnoList(Str("\"String-HASH\"")),App(CallNoArgs(SVar("is-left-recursive")),NoAnnoList(Str("\"Literal\""))),BA(Not(CallNoArgs(SVar("is-lexical-completion-sort"))),NoAnnoList(Str("\"String-HASH\""))))),RDefNoArgs("is-right-recursive",Rule(NoAnnoList(Str("\"String-HASH\"")),App(CallNoArgs(SVar("is-right-recursive")),NoAnnoList(Str("\"Literal\""))),BA(Not(CallNoArgs(SVar("is-lexical-completion-sort"))),NoAnnoList(Str("\"String-HASH\""))))),RDefNoArgs("is-Literal-completion-sort",RuleNoCond(NoAnnoList(Str("\"String-HASH\"")),RootApp(Id))),RDefNoArgs("is-left-recursive",Rule(NoAnnoList(Str("\"Integer-HASH\"")),App(CallNoArgs(SVar("is-left-recursive")),NoAnnoList(Str("\"Literal\""))),BA(Not(CallNoArgs(SVar("is-lexical-completion-sort"))),NoAnnoList(Str("\"Integer-HASH\""))))),RDefNoArgs("is-right-recursive",Rule(NoAnnoList(Str("\"Integer-HASH\"")),App(CallNoArgs(SVar("is-right-recursive")),NoAnnoList(Str("\"Literal\""))),BA(Not(CallNoArgs(SVar("is-lexical-completion-sort"))),NoAnnoList(Str("\"Integer-HASH\""))))),RDefNoArgs("is-Literal-completion-sort",RuleNoCond(NoAnnoList(Str("\"Integer-HASH\"")),RootApp(Id))),RDefNoArgs("is-left-recursive",Rule(NoAnnoList(Str("\"Float-HASH\"")),App(CallNoArgs(SVar("is-left-recursive")),NoAnnoList(Str("\"Literal\""))),BA(Not(CallNoArgs(SVar("is-lexical-completion-sort"))),NoAnnoList(Str("\"Float-HASH\""))))),RDefNoArgs("is-right-recursive",Rule(NoAnnoList(Str("\"Float-HASH\"")),App(CallNoArgs(SVar("is-right-recursive")),NoAnnoList(Str("\"Literal\""))),BA(Not(CallNoArgs(SVar("is-lexical-completion-sort"))),NoAnnoList(Str("\"Float-HASH\""))))),RDefNoArgs("is-Literal-completion-sort",RuleNoCond(NoAnnoList(Str("\"Float-HASH\"")),RootApp(Id)))]),Rules([SDefNoArgs("is-SDF-placeholder",Match(NoAnnoList(Op("Char-HASH-Plhdr",[])))),SDefNoArgs("is-SDF-placeholder",Match(NoAnnoList(Op("String-HASH-Plhdr",[])))),SDefNoArgs("is-SDF-placeholder",Match(NoAnnoList(Op("Integer-HASH-Plhdr",[])))),SDefNoArgs("is-SDF-placeholder",Match(NoAnnoList(Op("Literal-Plhdr",[])))),SDefNoArgs("is-SDF-placeholder",Match(NoAnnoList(Op("Float-HASH-Plhdr",[]))))])])