Module("pp/Haskell-Modules-pp",[Imports([Import("libstratego-gpp"),Import("libspoofax/sdf/pp"),Import("libspoofax/term/origin"),Import("libspoofax/term/annotation"),Import("libstratego-sglr"),Import("libstratego-sglr"),Import("signatures/Haskell-Modules-sig")]),Imports([Import("signatures/Haskell-Identifier-Sorts-sig"),Import("signatures/Haskell-Import-Export-sig"),Import("signatures/Haskell-Expressions-sig")]),Imports([Import("pp/Haskell-Identifier-Sorts-pp"),Import("pp/Haskell-Import-Export-pp"),Import("pp/Haskell-Expressions-pp")]),Strategies([SDefNoArgs("prettyprint-example",CallNoArgs(SVar("prettyprint-Haskell"))),SDefNoArgs("prettyprint-Haskell",Fail),SDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Fail)]),Strategies([SDefNoArgs("prettyprint-SDF-start-symbols",CallNoArgs(SVar("prettyprint-Haskell-start-symbols"))),SDefNoArgs("prettyprint-Haskell-start-symbols",Fail)]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Module"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Topdecl"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Module"))),BA(Match(NoAnnoList(Str("\"Module\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Topdecl"))),BA(Match(NoAnnoList(Str("\"Topdecl\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-Module",Rule(NoAnnoList(Op("Module",[Var("t1__"),Var("t2__"),Var("body__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"module\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Modid"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),Call(SVar("pp-option"),[LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Exports"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))])))])),Var("t2__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"where\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Body"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("body__"))])))))])),SDefNoArgs("is-Haskell-Module",Match(NoAnnoList(Op("Module",[Wld,Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Module",[Var("t1__"),Var("t2__"),Var("body__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Module\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Module",[Var("t1__"),Var("t2__"),Var("body__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Module\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Module",[Var("t1__"),Var("t2__"),Var("body__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Module\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \"")))),SwitchCase(Match(NoAnnoList(Int("3"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Module",Rule(NoAnnoList(Op("Program",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Body"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Module",Match(NoAnnoList(Op("Program",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Program",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Module\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Program",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Module\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Program",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Module\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Topdecl",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Topdecl")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Decl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-Module",Fail),SDefNoArgs("is-Haskell-Topdecl",Fail),RDefNoArgs("prettyprint-Haskell-Module",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Module")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Topdecl",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Topdecl")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Modid",RuleNoCond(NoAnnoList(Op("Modid-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Modid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Modid",Match(NoAnnoList(Op("Modid-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Exports",RuleNoCond(NoAnnoList(Op("Exports-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Exports\""))]))]))]))])))),SDefNoArgs("is-Haskell-Exports",Match(NoAnnoList(Op("Exports-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Module",RuleNoCond(NoAnnoList(Op("Module-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Module\""))]))]))]))])))),SDefNoArgs("is-Haskell-Module",Match(NoAnnoList(Op("Module-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Body",RuleNoCond(NoAnnoList(Op("Body-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Body\""))]))]))]))])))),SDefNoArgs("is-Haskell-Body",Match(NoAnnoList(Op("Body-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Topdecl",RuleNoCond(NoAnnoList(Op("Topdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Topdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Topdecl",Match(NoAnnoList(Op("Topdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Decl",RuleNoCond(NoAnnoList(Op("Decl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Decl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Decl",Match(NoAnnoList(Op("Decl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Modid",RuleNoCond(NoAnnoList(Op("Modid-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Modid\""))]))]))]))])))),SDefNoArgs("is-Haskell-Modid",Match(NoAnnoList(Op("Modid-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Exports",RuleNoCond(NoAnnoList(Op("Exports-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Exports\""))]))]))]))])))),SDefNoArgs("is-Haskell-Exports",Match(NoAnnoList(Op("Exports-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Module",RuleNoCond(NoAnnoList(Op("Module-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Module\""))]))]))]))])))),SDefNoArgs("is-Haskell-Module",Match(NoAnnoList(Op("Module-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Body",RuleNoCond(NoAnnoList(Op("Body-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Body\""))]))]))]))])))),SDefNoArgs("is-Haskell-Body",Match(NoAnnoList(Op("Body-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Topdecl",RuleNoCond(NoAnnoList(Op("Topdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Topdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Topdecl",Match(NoAnnoList(Op("Topdecl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Decl",RuleNoCond(NoAnnoList(Op("Decl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Decl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Decl",Match(NoAnnoList(Op("Decl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Exports",RuleNoCond(NoAnnoList(Op("Exports-Opt-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"\""))]))]))]))])))),SDefNoArgs("is-Haskell-Exports",Match(NoAnnoList(Op("Exports-Opt-Plhdr",[]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Body"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-Empty"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideBody"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-OffsideBody"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdecl"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Body"))),BA(Match(NoAnnoList(Str("\"Body\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-Empty"))),BA(Match(NoAnnoList(Str("\"Empty\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideBody"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-OffsideBody"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdecl"))),BA(Match(NoAnnoList(Str("\"NoOffsideImportdecl\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-Body",Rule(NoAnnoList(Op("NoOffsideBody",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"{\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideBody"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\"}\""))]))])))))])),SDefNoArgs("is-Haskell-Body",Match(NoAnnoList(Op("NoOffsideBody",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NoOffsideBody",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Body\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NoOffsideBody",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Body\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("NoOffsideBody",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Body\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-Body",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-Body")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideBody"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-Empty",RuleNoCond(NoAnnoList(Op("Empty",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"\""))]))]))]))])))),SDefNoArgs("is-Haskell-Empty",Match(NoAnnoList(Op("Empty",[])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Empty",[]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Empty\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Empty",[]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Empty\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Empty",[]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"Empty\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("check-nonterminal-isEmpty",Match(NoAnnoList(Op("Empty",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideBody",Rule(NoAnnoList(Op("BodyEmpty",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Empty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Empty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-NoOffsideBody",Match(NoAnnoList(Op("BodyEmpty",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideBody",Rule(NoAnnoList(Op("BodyEmptyNoOffside",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Empty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdeclListSem"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-NoOffsideBody",Match(NoAnnoList(Op("BodyEmptyNoOffside",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmptyNoOffside",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmptyNoOffside",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmptyNoOffside",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideBody",Rule(NoAnnoList(Op("BodyNoOffsideEmpty",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdeclListSem"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Empty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-NoOffsideBody",Match(NoAnnoList(Op("BodyNoOffsideEmpty",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyNoOffsideEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyNoOffsideEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyNoOffsideEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideBody",Rule(NoAnnoList(Op("Body",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdeclListSem"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-NoOffsideBody",Match(NoAnnoList(Op("Body",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Body",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Body",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Body",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideBody",Rule(NoAnnoList(Op("BodyEmpty",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Empty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Empty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-OffsideBody",Match(NoAnnoList(Op("BodyEmpty",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideBody",Rule(NoAnnoList(Op("BodyEmptyOffside",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Empty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-OffsideBody",Match(NoAnnoList(Op("BodyEmptyOffside",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmptyOffside",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmptyOffside",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyEmptyOffside",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideBody",Rule(NoAnnoList(Op("BodyOffsideEmpty",[Var("t1__"),Var("t2__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Empty"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t2__"))])))))])),SDefNoArgs("is-Haskell-OffsideBody",Match(NoAnnoList(Op("BodyOffsideEmpty",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyOffsideEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyOffsideEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("BodyOffsideEmpty",[Var("t1__"),Var("t2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideBody",Rule(NoAnnoList(Op("Body",[Var("imp1__"),Var("imp2__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Align",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp1\""))])),NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp2\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("imp1__'")]))]))),[WithClause(Assign(Var("imp1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp1\""))]))]))])),Var("imp1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp2\""))]))]))])),Var("imp2__"))])))))])),SDefNoArgs("is-Haskell-OffsideBody",Match(NoAnnoList(Op("Body",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Body",[Var("imp1__"),Var("imp2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Body",[Var("imp1__"),Var("imp2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Body",[Var("imp1__"),Var("imp2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideBody\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdecl",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideImportdecl")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Importdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdecl",Rule(NoAnnoList(Op("Semi",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))])))))])),SDefNoArgs("is-Haskell-NoOffsideImportdecl",Match(NoAnnoList(Op("Semi",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-Body",Fail),SDefNoArgs("is-Haskell-Empty",Fail),SDefNoArgs("is-Haskell-NoOffsideBody",Fail),SDefNoArgs("is-Haskell-OffsideBody",Fail),SDefNoArgs("is-Haskell-NoOffsideImportdecl",Fail),RDefNoArgs("prettyprint-Haskell-Body",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Body")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Empty",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-Empty")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideBody",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideBody")),Var("h")))),RDefNoArgs("prettyprint-Haskell-OffsideBody",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-OffsideBody")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdecl",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdecl")),Var("h")))),RDefNoArgs("prettyprint-Haskell-Body",RuleNoCond(NoAnnoList(Op("Body-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Body\""))]))]))]))])))),SDefNoArgs("is-Haskell-Body",Match(NoAnnoList(Op("Body-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideTopdeclListSem-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdeclListSem",Match(NoAnnoList(Op("NoOffsideTopdeclListSem-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideBody",RuleNoCond(NoAnnoList(Op("NoOffsideBody-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideBody\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideBody",Match(NoAnnoList(Op("NoOffsideBody-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideImportdeclListSem-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideImportdeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideImportdeclListSem",Match(NoAnnoList(Op("NoOffsideImportdeclListSem-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclList",RuleNoCond(NoAnnoList(Op("NoOffsideTopdeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdeclList",Match(NoAnnoList(Op("NoOffsideTopdeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Empty",RuleNoCond(NoAnnoList(Op("Empty-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Empty\""))]))]))]))])))),SDefNoArgs("is-Haskell-Empty",Match(NoAnnoList(Op("Empty-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideBody",RuleNoCond(NoAnnoList(Op("OffsideBody-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideBody\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideBody",Match(NoAnnoList(Op("OffsideBody-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideImportdeclList",RuleNoCond(NoAnnoList(Op("OffsideImportdeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideImportdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideImportdeclList",Match(NoAnnoList(Op("OffsideImportdeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideTopdeclList",RuleNoCond(NoAnnoList(Op("OffsideTopdeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideTopdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideTopdeclList",Match(NoAnnoList(Op("OffsideTopdeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Importdecl",RuleNoCond(NoAnnoList(Op("Importdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Importdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Importdecl",Match(NoAnnoList(Op("Importdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdecl",RuleNoCond(NoAnnoList(Op("NoOffsideImportdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideImportdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideImportdecl",Match(NoAnnoList(Op("NoOffsideImportdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Body",RuleNoCond(NoAnnoList(Op("Body-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Body\""))]))]))]))])))),SDefNoArgs("is-Haskell-Body",Match(NoAnnoList(Op("Body-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideTopdeclListSem-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdeclListSem",Match(NoAnnoList(Op("NoOffsideTopdeclListSem-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideBody",RuleNoCond(NoAnnoList(Op("NoOffsideBody-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideBody\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideBody",Match(NoAnnoList(Op("NoOffsideBody-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideImportdeclListSem-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideImportdeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideImportdeclListSem",Match(NoAnnoList(Op("NoOffsideImportdeclListSem-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclList",RuleNoCond(NoAnnoList(Op("NoOffsideTopdeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdeclList",Match(NoAnnoList(Op("NoOffsideTopdeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Empty",RuleNoCond(NoAnnoList(Op("Empty-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Empty\""))]))]))]))])))),SDefNoArgs("is-Haskell-Empty",Match(NoAnnoList(Op("Empty-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideBody",RuleNoCond(NoAnnoList(Op("OffsideBody-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideBody\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideBody",Match(NoAnnoList(Op("OffsideBody-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideImportdeclList",RuleNoCond(NoAnnoList(Op("OffsideImportdeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideImportdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideImportdeclList",Match(NoAnnoList(Op("OffsideImportdeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideTopdeclList",RuleNoCond(NoAnnoList(Op("OffsideTopdeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideTopdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideTopdeclList",Match(NoAnnoList(Op("OffsideTopdeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Importdecl",RuleNoCond(NoAnnoList(Op("Importdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Importdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Importdecl",Match(NoAnnoList(Op("Importdecl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdecl",RuleNoCond(NoAnnoList(Op("NoOffsideImportdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideImportdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideImportdecl",Match(NoAnnoList(Op("NoOffsideImportdecl-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdeclList"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdeclListSem"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdecl"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdeclList"))),BA(Match(NoAnnoList(Str("\"NoOffsideImportdeclList\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdeclListSem"))),BA(Match(NoAnnoList(Str("\"NoOffsideImportdeclListSem\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdecl"))),BA(Match(NoAnnoList(Str("\"NoOffsideTopdecl\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclList",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideImportdeclList")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(CallT(SVar("pp-H-list"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdecl"))],[NoAnnoList(Str("\";\""))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclListSem",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideImportdeclListSem")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclListSem",Rule(NoAnnoList(Op("Semi",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdeclListSem"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-NoOffsideImportdeclListSem",Match(NoAnnoList(Op("Semi",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideImportdeclListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideImportdeclListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideImportdeclListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdecl",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideTopdecl")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Topdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdecl",Rule(NoAnnoList(Op("Semi",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))])))))])),SDefNoArgs("is-Haskell-NoOffsideTopdecl",Match(NoAnnoList(Op("Semi",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-NoOffsideImportdeclList",Fail),SDefNoArgs("is-Haskell-NoOffsideImportdeclListSem",Fail),SDefNoArgs("is-Haskell-NoOffsideTopdecl",Fail),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclList",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdeclList")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclListSem",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideImportdeclListSem")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdecl",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdecl")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdecl",RuleNoCond(NoAnnoList(Op("NoOffsideImportdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideImportdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideImportdecl",Match(NoAnnoList(Op("NoOffsideImportdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclList",RuleNoCond(NoAnnoList(Op("NoOffsideImportdeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideImportdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideImportdeclList",Match(NoAnnoList(Op("NoOffsideImportdeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideImportdeclListSem-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideImportdeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideImportdeclListSem",Match(NoAnnoList(Op("NoOffsideImportdeclListSem-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Topdecl",RuleNoCond(NoAnnoList(Op("Topdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Topdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Topdecl",Match(NoAnnoList(Op("Topdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdecl",RuleNoCond(NoAnnoList(Op("NoOffsideTopdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdecl",Match(NoAnnoList(Op("NoOffsideTopdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdecl",RuleNoCond(NoAnnoList(Op("NoOffsideImportdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideImportdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideImportdecl",Match(NoAnnoList(Op("NoOffsideImportdecl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclList",RuleNoCond(NoAnnoList(Op("NoOffsideImportdeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideImportdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideImportdeclList",Match(NoAnnoList(Op("NoOffsideImportdeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideImportdeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideImportdeclListSem-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideImportdeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideImportdeclListSem",Match(NoAnnoList(Op("NoOffsideImportdeclListSem-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Topdecl",RuleNoCond(NoAnnoList(Op("Topdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Topdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Topdecl",Match(NoAnnoList(Op("Topdecl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdecl",RuleNoCond(NoAnnoList(Op("NoOffsideTopdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdecl",Match(NoAnnoList(Op("NoOffsideTopdecl-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdeclList"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdeclListSem"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdecl"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdeclList"))),BA(Match(NoAnnoList(Str("\"NoOffsideTopdeclList\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdeclListSem"))),BA(Match(NoAnnoList(Str("\"NoOffsideTopdeclListSem\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdecl"))),BA(Match(NoAnnoList(Str("\"OffsideImportdecl\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclList",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideTopdeclList")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(CallT(SVar("pp-H-list"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdecl"))],[NoAnnoList(Str("\";\""))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclListSem",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-NoOffsideTopdeclListSem")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdeclList"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclListSem",Rule(NoAnnoList(Op("Semi",[Var("t1__")])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WithClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))])),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdeclListSem"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-NoOffsideTopdeclListSem",Match(NoAnnoList(Op("Semi",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideTopdeclListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideTopdeclListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("Semi",[Var("t1__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"NoOffsideTopdeclListSem\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideImportdecl",Rule(Var("imp__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("imp__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-OffsideImportdecl")))),WhereClause(Assign(Var("imp__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Importdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Offside",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp\""))])),NoAnnoList(List([]))]))]))])),Var("imp__"))])))))])),RDefNoArgs("prettyprint-Haskell-OffsideImportdecl",Rule(NoAnnoList(Op("SemiAfter",[Var("imp__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp\""))])),NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("imp__'")]))]))),[WithClause(Assign(Var("imp__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp\""))]))]))])),Var("imp__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))])))])))))])),SDefNoArgs("is-Haskell-OffsideImportdecl",Match(NoAnnoList(Op("SemiAfter",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("imp__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("imp__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("imp__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideImportdecl",Rule(NoAnnoList(Op("SemiBefore",[Var("imp__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))])),NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("imp__'")]))]))),[WithClause(Assign(Var("imp__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp\""))]))]))])),Var("imp__"))])))))])),SDefNoArgs("is-Haskell-OffsideImportdecl",Match(NoAnnoList(Op("SemiBefore",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("imp__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("imp__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("imp__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideImportdecl",Rule(NoAnnoList(Op("ImportdeclSeq",[Var("imp1__"),Var("imp2__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp1\""))])),NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))])),NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp1\""))])),NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp2\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("imp1__'")]))]))),[WithClause(Assign(Var("imp1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Importdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Offside",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp1\""))])),NoAnnoList(List([]))])),NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp1\""))]))]))])),Var("imp1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"imp2\""))]))]))])),Var("imp2__"))])))))])),SDefNoArgs("is-Haskell-OffsideImportdecl",Match(NoAnnoList(Op("ImportdeclSeq",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ImportdeclSeq",[Var("imp1__"),Var("imp2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ImportdeclSeq",[Var("imp1__"),Var("imp2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("ImportdeclSeq",[Var("imp1__"),Var("imp2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideImportdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-NoOffsideTopdeclList",Fail),SDefNoArgs("is-Haskell-NoOffsideTopdeclListSem",Fail),SDefNoArgs("is-Haskell-OffsideImportdecl",Fail),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclList",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdeclList")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclListSem",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-NoOffsideTopdeclListSem")),Var("h")))),RDefNoArgs("prettyprint-Haskell-OffsideImportdecl",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdecl")),Var("h")))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdecl",RuleNoCond(NoAnnoList(Op("NoOffsideTopdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdecl",Match(NoAnnoList(Op("NoOffsideTopdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclList",RuleNoCond(NoAnnoList(Op("NoOffsideTopdeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdeclList",Match(NoAnnoList(Op("NoOffsideTopdeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideTopdeclListSem-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdeclListSem",Match(NoAnnoList(Op("NoOffsideTopdeclListSem-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Importdecl",RuleNoCond(NoAnnoList(Op("Importdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Importdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Importdecl",Match(NoAnnoList(Op("Importdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideImportdecl",RuleNoCond(NoAnnoList(Op("OffsideImportdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideImportdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideImportdecl",Match(NoAnnoList(Op("OffsideImportdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdecl",RuleNoCond(NoAnnoList(Op("NoOffsideTopdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdecl",Match(NoAnnoList(Op("NoOffsideTopdecl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclList",RuleNoCond(NoAnnoList(Op("NoOffsideTopdeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdeclList",Match(NoAnnoList(Op("NoOffsideTopdeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-NoOffsideTopdeclListSem",RuleNoCond(NoAnnoList(Op("NoOffsideTopdeclListSem-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$NoOffsideTopdeclListSem\""))]))]))]))])))),SDefNoArgs("is-Haskell-NoOffsideTopdeclListSem",Match(NoAnnoList(Op("NoOffsideTopdeclListSem-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Importdecl",RuleNoCond(NoAnnoList(Op("Importdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Importdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Importdecl",Match(NoAnnoList(Op("Importdecl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideImportdecl",RuleNoCond(NoAnnoList(Op("OffsideImportdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideImportdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideImportdecl",Match(NoAnnoList(Op("OffsideImportdecl-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdeclList"))),SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdecl"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdeclList"))),BA(Match(NoAnnoList(Str("\"OffsideImportdeclList\""))),Var("sort")))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdecl"))),BA(Match(NoAnnoList(Str("\"OffsideTopdecl\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-OffsideImportdeclList",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-OffsideImportdeclList")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-V-list"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Align",[NoAnnoList(Op("PosRef",[NoAnnoList(Int("1"))]))]))]))])),Var("t1__"))])))))])),RDefNoArgs("prettyprint-Haskell-OffsideTopdecl",Rule(Var("topDecl__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("topDecl__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-OffsideTopdecl")))),WhereClause(Assign(Var("topDecl__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Topdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Offside",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl\""))])),NoAnnoList(List([]))]))]))])),Var("topDecl__"))])))))])),RDefNoArgs("prettyprint-Haskell-OffsideTopdecl",Rule(NoAnnoList(Op("SemiBefore",[Var("topDecl__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))])),NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("topDecl__'")]))]))),[WithClause(Assign(Var("topDecl__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl\""))]))]))])),Var("topDecl__"))])))))])),SDefNoArgs("is-Haskell-OffsideTopdecl",Match(NoAnnoList(Op("SemiBefore",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("topDecl__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("topDecl__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiBefore",[Var("topDecl__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideTopdecl",Rule(NoAnnoList(Op("SemiAfter",[Var("topDecl__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl\""))])),NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("topDecl__'")]))]))),[WithClause(Assign(Var("topDecl__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl\""))]))]))])),Var("topDecl__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))])))])))))])),SDefNoArgs("is-Haskell-OffsideTopdecl",Match(NoAnnoList(Op("SemiAfter",[Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("topDecl__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("topDecl__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("SemiAfter",[Var("topDecl__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("prettyprint-Haskell-OffsideTopdecl",Rule(NoAnnoList(Op("TopdeclSeqOffside",[Var("topDecl1__"),Var("topDecl2__")])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl1\""))])),NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))])),NoAnnoList(Op("Indent",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl1\""))])),NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl2\""))]))]))]))]))]),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("topDecl1__'")]))]))),[WithClause(Assign(Var("topDecl1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-Topdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Offside",[NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl1\""))])),NoAnnoList(List([]))])),NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl1\""))]))]))])),Var("topDecl1__")),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LiteralRef",[NoAnnoList(Str("\";\""))]))]))]),NoAnnoList(Op("S",[NoAnnoList(Str("\";\""))]))),NoAnnoList(Op("S",[NoAnnoList(Str("\" \""))])),App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("LabelRef",[NoAnnoList(Str("\"topDecl2\""))]))]))])),Var("topDecl2__"))])))))])),SDefNoArgs("is-Haskell-OffsideTopdecl",Match(NoAnnoList(Op("TopdeclSeqOffside",[Wld,Wld])))),RDefNoArgs("Haskell-get-indent",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("TopdeclSeqOffside",[Var("topDecl1__"),Var("topDecl2__")]))),Var("index")])),Var("indent"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("indent"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("indent"),NoAnnoList(Str("\"\""))))],Assign(Var("indent"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-separator",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("TopdeclSeqOffside",[Var("topDecl1__"),Var("topDecl2__")]))),Var("index")])),Var("separator"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("separator"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("separator"),NoAnnoList(Str("\"\""))))],Assign(Var("separator"),NoAnnoList(Str("\"\"")))))])),RDefNoArgs("Haskell-get-leading-ws",Rule(NoAnnoList(Tuple([As(Var("t"),NoAnnoList(Op("TopdeclSeqOffside",[Var("topDecl1__"),Var("topDecl2__")]))),Var("index")])),Var("ws"),[WhereClause(Seq(Assign(Var("sort"),App(CallNoArgs(SVar("ia-get-sort")),Var("t"))),BA(Match(NoAnnoList(Str("\"OffsideTopdecl\""))),Var("sort")))),WithClause(SwitchChoice(Build(Var("index")),[SwitchCase(Match(NoAnnoList(Int("1"))),Assign(Var("ws"),NoAnnoList(Str("\"\"")))),SwitchCase(Match(NoAnnoList(Int("2"))),Assign(Var("ws"),NoAnnoList(Str("\" \""))))],Assign(Var("ws"),NoAnnoList(Str("\"\"")))))])),SDefNoArgs("is-Haskell-OffsideImportdeclList",Fail),SDefNoArgs("is-Haskell-OffsideTopdecl",Fail),RDefNoArgs("prettyprint-Haskell-OffsideImportdeclList",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-OffsideImportdeclList")),Var("h")))),RDefNoArgs("prettyprint-Haskell-OffsideTopdecl",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdecl")),Var("h")))),RDefNoArgs("prettyprint-Haskell-OffsideImportdeclList",RuleNoCond(NoAnnoList(Op("OffsideImportdeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideImportdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideImportdeclList",Match(NoAnnoList(Op("OffsideImportdeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideImportdecl",RuleNoCond(NoAnnoList(Op("OffsideImportdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideImportdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideImportdecl",Match(NoAnnoList(Op("OffsideImportdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-Topdecl",RuleNoCond(NoAnnoList(Op("Topdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Topdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Topdecl",Match(NoAnnoList(Op("Topdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideTopdecl",RuleNoCond(NoAnnoList(Op("OffsideTopdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideTopdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideTopdecl",Match(NoAnnoList(Op("OffsideTopdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideImportdeclList",RuleNoCond(NoAnnoList(Op("OffsideImportdeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideImportdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideImportdeclList",Match(NoAnnoList(Op("OffsideImportdeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideImportdecl",RuleNoCond(NoAnnoList(Op("OffsideImportdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideImportdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideImportdecl",Match(NoAnnoList(Op("OffsideImportdecl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-Topdecl",RuleNoCond(NoAnnoList(Op("Topdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$Topdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-Topdecl",Match(NoAnnoList(Op("Topdecl-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideTopdecl",RuleNoCond(NoAnnoList(Op("OffsideTopdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideTopdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideTopdecl",Match(NoAnnoList(Op("OffsideTopdecl-Plhdr",[Wld]))))]),Strategies([SDefNoArgs("prettyprint-Haskell",CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdeclList"))),RDefT("prettyprint-Haskell",[],[DefaultVarDec("sort")],Rule(Var("t"),RootApp(CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdeclList"))),BA(Match(NoAnnoList(Str("\"OffsideTopdeclList\""))),Var("sort")))),RDefNoArgs("prettyprint-Haskell-OffsideTopdeclList",Rule(Var("t1__"),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),Var("t1__'")]))])),[WhereClause(Not(CallNoArgs(SVar("is-Haskell-OffsideTopdeclList")))),WhereClause(Assign(Var("t1__'"),App(Seq(CallT(SVar("clean-layout-empty-symbols"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Op("FALSE",[])),NoAnnoList(Op("FALSE",[]))]),CallNoArgs(SVar("flatten-list"))),NoAnnoList(List([App(Seq(LChoice(Seq(CallNoArgs(SVar("check-nonterminal-isEmpty")),Id),LChoice(Call(SVar("pp-V-list"),[CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdecl"))]),Call(SVar("pp-one-Z"),[CallNoArgs(SVar("prettyprint-completion-aux"))]))),CallT(SVar("add-annotations"),[],[NoAnnoList(List([NoAnnoList(Op("Align",[NoAnnoList(Op("PosRef",[NoAnnoList(Int("1"))]))]))]))])),Var("t1__"))])))))])),SDefNoArgs("is-Haskell-OffsideTopdeclList",Fail),RDefNoArgs("prettyprint-Haskell-OffsideTopdeclList",RuleNoCond(NoAnnoList(Op("amb",[NoAnnoList(ListTail([Var("h")],Var("hs")))])),App(CallNoArgs(SVar("prettyprint-Haskell-OffsideTopdeclList")),Var("h")))),RDefNoArgs("prettyprint-Haskell-OffsideTopdeclList",RuleNoCond(NoAnnoList(Op("OffsideTopdeclList-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideTopdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideTopdeclList",Match(NoAnnoList(Op("OffsideTopdeclList-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideTopdecl",RuleNoCond(NoAnnoList(Op("OffsideTopdecl-Plhdr",[])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideTopdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideTopdecl",Match(NoAnnoList(Op("OffsideTopdecl-Plhdr",[])))),RDefNoArgs("prettyprint-Haskell-OffsideTopdeclList",RuleNoCond(NoAnnoList(Op("OffsideTopdeclList-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideTopdeclList\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideTopdeclList",Match(NoAnnoList(Op("OffsideTopdeclList-Plhdr",[Wld])))),RDefNoArgs("prettyprint-Haskell-OffsideTopdecl",RuleNoCond(NoAnnoList(Op("OffsideTopdecl-Plhdr",[Wld])),NoAnnoList(List([NoAnnoList(Op("H",[NoAnnoList(List([NoAnnoList(Op("SOpt",[NoAnnoList(Op("HS",[])),NoAnnoList(Str("\"0\""))]))])),NoAnnoList(List([NoAnnoList(Op("S",[NoAnnoList(Str("\"$OffsideTopdecl\""))]))]))]))])))),SDefNoArgs("is-Haskell-OffsideTopdecl",Match(NoAnnoList(Op("OffsideTopdecl-Plhdr",[Wld]))))])])